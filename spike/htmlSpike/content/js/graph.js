/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 221.0, "minX": 0.0, "maxY": 25053.0, "series": [{"data": [[0.0, 261.0], [0.1, 261.0], [0.2, 261.0], [0.3, 261.0], [0.4, 263.0], [0.5, 263.0], [0.6, 263.0], [0.7, 266.0], [0.8, 266.0], [0.9, 266.0], [1.0, 266.0], [1.1, 270.0], [1.2, 270.0], [1.3, 270.0], [1.4, 271.0], [1.5, 271.0], [1.6, 271.0], [1.7, 271.0], [1.8, 288.0], [1.9, 288.0], [2.0, 288.0], [2.1, 290.0], [2.2, 290.0], [2.3, 290.0], [2.4, 290.0], [2.5, 292.0], [2.6, 292.0], [2.7, 292.0], [2.8, 300.0], [2.9, 300.0], [3.0, 300.0], [3.1, 300.0], [3.2, 300.0], [3.3, 300.0], [3.4, 300.0], [3.5, 302.0], [3.6, 302.0], [3.7, 302.0], [3.8, 302.0], [3.9, 306.0], [4.0, 306.0], [4.1, 306.0], [4.2, 307.0], [4.3, 307.0], [4.4, 307.0], [4.5, 307.0], [4.6, 308.0], [4.7, 308.0], [4.8, 308.0], [4.9, 308.0], [5.0, 308.0], [5.1, 308.0], [5.2, 308.0], [5.3, 308.0], [5.4, 308.0], [5.5, 308.0], [5.6, 311.0], [5.7, 311.0], [5.8, 311.0], [5.9, 311.0], [6.0, 316.0], [6.1, 316.0], [6.2, 316.0], [6.3, 320.0], [6.4, 320.0], [6.5, 320.0], [6.6, 323.0], [6.7, 323.0], [6.8, 323.0], [6.9, 323.0], [7.0, 324.0], [7.1, 324.0], [7.2, 324.0], [7.3, 325.0], [7.4, 325.0], [7.5, 325.0], [7.6, 325.0], [7.7, 325.0], [7.8, 325.0], [7.9, 325.0], [8.0, 325.0], [8.1, 325.0], [8.2, 325.0], [8.3, 325.0], [8.4, 326.0], [8.5, 326.0], [8.6, 326.0], [8.7, 329.0], [8.8, 329.0], [8.9, 329.0], [9.0, 329.0], [9.1, 329.0], [9.2, 329.0], [9.3, 329.0], [9.4, 332.0], [9.5, 332.0], [9.6, 332.0], [9.7, 332.0], [9.8, 332.0], [9.9, 332.0], [10.0, 332.0], [10.1, 333.0], [10.2, 333.0], [10.3, 333.0], [10.4, 333.0], [10.5, 334.0], [10.6, 334.0], [10.7, 334.0], [10.8, 334.0], [10.9, 334.0], [11.0, 334.0], [11.1, 334.0], [11.2, 336.0], [11.3, 336.0], [11.4, 336.0], [11.5, 337.0], [11.6, 337.0], [11.7, 337.0], [11.8, 337.0], [11.9, 339.0], [12.0, 339.0], [12.1, 339.0], [12.2, 340.0], [12.3, 340.0], [12.4, 340.0], [12.5, 342.0], [12.6, 342.0], [12.7, 342.0], [12.8, 342.0], [12.9, 343.0], [13.0, 343.0], [13.1, 343.0], [13.2, 343.0], [13.3, 343.0], [13.4, 343.0], [13.5, 343.0], [13.6, 344.0], [13.7, 344.0], [13.8, 344.0], [13.9, 344.0], [14.0, 344.0], [14.1, 344.0], [14.2, 344.0], [14.3, 346.0], [14.4, 346.0], [14.5, 346.0], [14.6, 349.0], [14.7, 349.0], [14.8, 349.0], [14.9, 349.0], [15.0, 353.0], [15.1, 353.0], [15.2, 353.0], [15.3, 353.0], [15.4, 353.0], [15.5, 353.0], [15.6, 353.0], [15.7, 356.0], [15.8, 356.0], [15.9, 356.0], [16.0, 358.0], [16.1, 358.0], [16.2, 358.0], [16.3, 358.0], [16.4, 358.0], [16.5, 358.0], [16.6, 358.0], [16.7, 359.0], [16.8, 359.0], [16.9, 359.0], [17.0, 359.0], [17.1, 365.0], [17.2, 365.0], [17.3, 365.0], [17.4, 373.0], [17.5, 373.0], [17.6, 373.0], [17.7, 373.0], [17.8, 377.0], [17.9, 377.0], [18.0, 377.0], [18.1, 378.0], [18.2, 378.0], [18.3, 378.0], [18.4, 378.0], [18.5, 385.0], [18.6, 385.0], [18.7, 385.0], [18.8, 396.0], [18.9, 396.0], [19.0, 396.0], [19.1, 396.0], [19.2, 396.0], [19.3, 396.0], [19.4, 396.0], [19.5, 400.0], [19.6, 400.0], [19.7, 400.0], [19.8, 401.0], [19.9, 401.0], [20.0, 401.0], [20.1, 401.0], [20.2, 401.0], [20.3, 401.0], [20.4, 401.0], [20.5, 412.0], [20.6, 412.0], [20.7, 412.0], [20.8, 412.0], [20.9, 429.0], [21.0, 429.0], [21.1, 429.0], [21.2, 434.0], [21.3, 434.0], [21.4, 434.0], [21.5, 434.0], [21.6, 435.0], [21.7, 435.0], [21.8, 435.0], [21.9, 436.0], [22.0, 436.0], [22.1, 436.0], [22.2, 436.0], [22.3, 438.0], [22.4, 438.0], [22.5, 438.0], [22.6, 439.0], [22.7, 439.0], [22.8, 439.0], [22.9, 439.0], [23.0, 441.0], [23.1, 441.0], [23.2, 441.0], [23.3, 445.0], [23.4, 445.0], [23.5, 445.0], [23.6, 445.0], [23.7, 449.0], [23.8, 449.0], [23.9, 449.0], [24.0, 452.0], [24.1, 452.0], [24.2, 452.0], [24.3, 452.0], [24.4, 458.0], [24.5, 458.0], [24.6, 458.0], [24.7, 462.0], [24.8, 462.0], [24.9, 462.0], [25.0, 463.0], [25.1, 463.0], [25.2, 463.0], [25.3, 463.0], [25.4, 466.0], [25.5, 466.0], [25.6, 466.0], [25.7, 468.0], [25.8, 468.0], [25.9, 468.0], [26.0, 468.0], [26.1, 478.0], [26.2, 478.0], [26.3, 478.0], [26.4, 478.0], [26.5, 478.0], [26.6, 478.0], [26.7, 478.0], [26.8, 488.0], [26.9, 488.0], [27.0, 488.0], [27.1, 488.0], [27.2, 488.0], [27.3, 488.0], [27.4, 488.0], [27.5, 490.0], [27.6, 490.0], [27.7, 490.0], [27.8, 491.0], [27.9, 491.0], [28.0, 491.0], [28.1, 491.0], [28.2, 494.0], [28.3, 494.0], [28.4, 494.0], [28.5, 510.0], [28.6, 510.0], [28.7, 510.0], [28.8, 510.0], [28.9, 511.0], [29.0, 511.0], [29.1, 511.0], [29.2, 523.0], [29.3, 523.0], [29.4, 523.0], [29.5, 523.0], [29.6, 525.0], [29.7, 525.0], [29.8, 525.0], [29.9, 538.0], [30.0, 538.0], [30.1, 538.0], [30.2, 538.0], [30.3, 543.0], [30.4, 543.0], [30.5, 543.0], [30.6, 551.0], [30.7, 551.0], [30.8, 551.0], [30.9, 551.0], [31.0, 556.0], [31.1, 556.0], [31.2, 556.0], [31.3, 567.0], [31.4, 567.0], [31.5, 567.0], [31.6, 568.0], [31.7, 568.0], [31.8, 568.0], [31.9, 568.0], [32.0, 570.0], [32.1, 570.0], [32.2, 570.0], [32.3, 581.0], [32.4, 581.0], [32.5, 581.0], [32.6, 581.0], [32.7, 581.0], [32.8, 581.0], [32.9, 581.0], [33.0, 587.0], [33.1, 587.0], [33.2, 587.0], [33.3, 587.0], [33.4, 592.0], [33.5, 592.0], [33.6, 592.0], [33.7, 603.0], [33.8, 603.0], [33.9, 603.0], [34.0, 603.0], [34.1, 606.0], [34.2, 606.0], [34.3, 606.0], [34.4, 615.0], [34.5, 615.0], [34.6, 615.0], [34.7, 615.0], [34.8, 634.0], [34.9, 634.0], [35.0, 634.0], [35.1, 641.0], [35.2, 641.0], [35.3, 641.0], [35.4, 641.0], [35.5, 642.0], [35.6, 642.0], [35.7, 642.0], [35.8, 644.0], [35.9, 644.0], [36.0, 644.0], [36.1, 644.0], [36.2, 645.0], [36.3, 645.0], [36.4, 645.0], [36.5, 647.0], [36.6, 647.0], [36.7, 647.0], [36.8, 647.0], [36.9, 661.0], [37.0, 661.0], [37.1, 661.0], [37.2, 684.0], [37.3, 684.0], [37.4, 684.0], [37.5, 690.0], [37.6, 690.0], [37.7, 690.0], [37.8, 690.0], [37.9, 700.0], [38.0, 700.0], [38.1, 700.0], [38.2, 708.0], [38.3, 708.0], [38.4, 708.0], [38.5, 708.0], [38.6, 717.0], [38.7, 717.0], [38.8, 717.0], [38.9, 743.0], [39.0, 743.0], [39.1, 743.0], [39.2, 743.0], [39.3, 747.0], [39.4, 747.0], [39.5, 747.0], [39.6, 811.0], [39.7, 811.0], [39.8, 811.0], [39.9, 811.0], [40.0, 819.0], [40.1, 819.0], [40.2, 819.0], [40.3, 821.0], [40.4, 821.0], [40.5, 821.0], [40.6, 821.0], [40.7, 895.0], [40.8, 895.0], [40.9, 895.0], [41.0, 903.0], [41.1, 903.0], [41.2, 903.0], [41.3, 903.0], [41.4, 918.0], [41.5, 918.0], [41.6, 918.0], [41.7, 922.0], [41.8, 922.0], [41.9, 922.0], [42.0, 922.0], [42.1, 925.0], [42.2, 925.0], [42.3, 925.0], [42.4, 926.0], [42.5, 926.0], [42.6, 926.0], [42.7, 926.0], [42.8, 951.0], [42.9, 951.0], [43.0, 951.0], [43.1, 1005.0], [43.2, 1005.0], [43.3, 1005.0], [43.4, 1005.0], [43.5, 1016.0], [43.6, 1016.0], [43.7, 1016.0], [43.8, 1022.0], [43.9, 1022.0], [44.0, 1022.0], [44.1, 1055.0], [44.2, 1055.0], [44.3, 1055.0], [44.4, 1055.0], [44.5, 1056.0], [44.6, 1056.0], [44.7, 1056.0], [44.8, 1067.0], [44.9, 1067.0], [45.0, 1067.0], [45.1, 1067.0], [45.2, 1073.0], [45.3, 1073.0], [45.4, 1073.0], [45.5, 1100.0], [45.6, 1100.0], [45.7, 1100.0], [45.8, 1100.0], [45.9, 1121.0], [46.0, 1121.0], [46.1, 1121.0], [46.2, 1137.0], [46.3, 1137.0], [46.4, 1137.0], [46.5, 1137.0], [46.6, 1152.0], [46.7, 1152.0], [46.8, 1152.0], [46.9, 1178.0], [47.0, 1178.0], [47.1, 1178.0], [47.2, 1178.0], [47.3, 1209.0], [47.4, 1209.0], [47.5, 1209.0], [47.6, 1229.0], [47.7, 1229.0], [47.8, 1229.0], [47.9, 1229.0], [48.0, 1245.0], [48.1, 1245.0], [48.2, 1245.0], [48.3, 1259.0], [48.4, 1259.0], [48.5, 1259.0], [48.6, 1259.0], [48.7, 1272.0], [48.8, 1272.0], [48.9, 1272.0], [49.0, 1275.0], [49.1, 1275.0], [49.2, 1275.0], [49.3, 1275.0], [49.4, 1296.0], [49.5, 1296.0], [49.6, 1296.0], [49.7, 1301.0], [49.8, 1301.0], [49.9, 1301.0], [50.0, 1316.0], [50.1, 1316.0], [50.2, 1316.0], [50.3, 1316.0], [50.4, 1374.0], [50.5, 1374.0], [50.6, 1374.0], [50.7, 1377.0], [50.8, 1377.0], [50.9, 1377.0], [51.0, 1377.0], [51.1, 1426.0], [51.2, 1426.0], [51.3, 1426.0], [51.4, 1452.0], [51.5, 1452.0], [51.6, 1452.0], [51.7, 1452.0], [51.8, 1469.0], [51.9, 1469.0], [52.0, 1469.0], [52.1, 1469.0], [52.2, 1469.0], [52.3, 1469.0], [52.4, 1469.0], [52.5, 1491.0], [52.6, 1491.0], [52.7, 1491.0], [52.8, 1531.0], [52.9, 1531.0], [53.0, 1531.0], [53.1, 1531.0], [53.2, 1548.0], [53.3, 1548.0], [53.4, 1548.0], [53.5, 1550.0], [53.6, 1550.0], [53.7, 1550.0], [53.8, 1550.0], [53.9, 1647.0], [54.0, 1647.0], [54.1, 1647.0], [54.2, 1652.0], [54.3, 1652.0], [54.4, 1652.0], [54.5, 1652.0], [54.6, 1674.0], [54.7, 1674.0], [54.8, 1674.0], [54.9, 1792.0], [55.0, 1792.0], [55.1, 1792.0], [55.2, 1792.0], [55.3, 1803.0], [55.4, 1803.0], [55.5, 1803.0], [55.6, 1841.0], [55.7, 1841.0], [55.8, 1841.0], [55.9, 1841.0], [56.0, 1842.0], [56.1, 1842.0], [56.2, 1842.0], [56.3, 1870.0], [56.4, 1870.0], [56.5, 1870.0], [56.6, 2064.0], [56.7, 2064.0], [56.8, 2064.0], [56.9, 2064.0], [57.0, 2225.0], [57.1, 2225.0], [57.2, 2225.0], [57.3, 2252.0], [57.4, 2252.0], [57.5, 2252.0], [57.6, 2252.0], [57.7, 2260.0], [57.8, 2260.0], [57.9, 2260.0], [58.0, 2294.0], [58.1, 2294.0], [58.2, 2294.0], [58.3, 2294.0], [58.4, 2367.0], [58.5, 2367.0], [58.6, 2367.0], [58.7, 2447.0], [58.8, 2447.0], [58.9, 2447.0], [59.0, 2447.0], [59.1, 2459.0], [59.2, 2459.0], [59.3, 2459.0], [59.4, 2502.0], [59.5, 2502.0], [59.6, 2502.0], [59.7, 2502.0], [59.8, 2541.0], [59.9, 2541.0], [60.0, 2541.0], [60.1, 2894.0], [60.2, 2894.0], [60.3, 2894.0], [60.4, 2894.0], [60.5, 2901.0], [60.6, 2901.0], [60.7, 2901.0], [60.8, 2933.0], [60.9, 2933.0], [61.0, 2933.0], [61.1, 2933.0], [61.2, 3029.0], [61.3, 3029.0], [61.4, 3029.0], [61.5, 3363.0], [61.6, 3363.0], [61.7, 3363.0], [61.8, 3363.0], [61.9, 3378.0], [62.0, 3378.0], [62.1, 3378.0], [62.2, 3496.0], [62.3, 3496.0], [62.4, 3496.0], [62.5, 3566.0], [62.6, 3566.0], [62.7, 3566.0], [62.8, 3566.0], [62.9, 3580.0], [63.0, 3580.0], [63.1, 3580.0], [63.2, 3618.0], [63.3, 3618.0], [63.4, 3618.0], [63.5, 3618.0], [63.6, 3619.0], [63.7, 3619.0], [63.8, 3619.0], [63.9, 3660.0], [64.0, 3660.0], [64.1, 3660.0], [64.2, 3660.0], [64.3, 3771.0], [64.4, 3771.0], [64.5, 3771.0], [64.6, 3804.0], [64.7, 3804.0], [64.8, 3804.0], [64.9, 3804.0], [65.0, 3814.0], [65.1, 3814.0], [65.2, 3814.0], [65.3, 3939.0], [65.4, 3939.0], [65.5, 3939.0], [65.6, 3939.0], [65.7, 3986.0], [65.8, 3986.0], [65.9, 3986.0], [66.0, 4355.0], [66.1, 4355.0], [66.2, 4355.0], [66.3, 4355.0], [66.4, 4404.0], [66.5, 4404.0], [66.6, 4404.0], [66.7, 4439.0], [66.8, 4439.0], [66.9, 4439.0], [67.0, 4439.0], [67.1, 4534.0], [67.2, 4534.0], [67.3, 4534.0], [67.4, 4583.0], [67.5, 4583.0], [67.6, 4583.0], [67.7, 4583.0], [67.8, 4799.0], [67.9, 4799.0], [68.0, 4799.0], [68.1, 4982.0], [68.2, 4982.0], [68.3, 4982.0], [68.4, 4982.0], [68.5, 4999.0], [68.6, 4999.0], [68.7, 4999.0], [68.8, 5195.0], [68.9, 5195.0], [69.0, 5195.0], [69.1, 5214.0], [69.2, 5214.0], [69.3, 5214.0], [69.4, 5214.0], [69.5, 5275.0], [69.6, 5275.0], [69.7, 5275.0], [69.8, 5359.0], [69.9, 5359.0], [70.0, 5359.0], [70.1, 5359.0], [70.2, 5444.0], [70.3, 5444.0], [70.4, 5444.0], [70.5, 5490.0], [70.6, 5490.0], [70.7, 5490.0], [70.8, 5490.0], [70.9, 5641.0], [71.0, 5641.0], [71.1, 5641.0], [71.2, 5659.0], [71.3, 5659.0], [71.4, 5659.0], [71.5, 5659.0], [71.6, 5823.0], [71.7, 5823.0], [71.8, 5823.0], [71.9, 5858.0], [72.0, 5858.0], [72.1, 5858.0], [72.2, 5858.0], [72.3, 5921.0], [72.4, 5921.0], [72.5, 5921.0], [72.6, 6161.0], [72.7, 6161.0], [72.8, 6161.0], [72.9, 6161.0], [73.0, 6299.0], [73.1, 6299.0], [73.2, 6299.0], [73.3, 6341.0], [73.4, 6341.0], [73.5, 6341.0], [73.6, 6341.0], [73.7, 6342.0], [73.8, 6342.0], [73.9, 6342.0], [74.0, 6450.0], [74.1, 6450.0], [74.2, 6450.0], [74.3, 6450.0], [74.4, 6462.0], [74.5, 6462.0], [74.6, 6462.0], [74.7, 6520.0], [74.8, 6520.0], [74.9, 6520.0], [75.0, 6520.0], [75.1, 6632.0], [75.2, 6632.0], [75.3, 6632.0], [75.4, 6915.0], [75.5, 6915.0], [75.6, 6915.0], [75.7, 7119.0], [75.8, 7119.0], [75.9, 7119.0], [76.0, 7119.0], [76.1, 7262.0], [76.2, 7262.0], [76.3, 7262.0], [76.4, 7343.0], [76.5, 7343.0], [76.6, 7343.0], [76.7, 7343.0], [76.8, 7402.0], [76.9, 7402.0], [77.0, 7402.0], [77.1, 7427.0], [77.2, 7427.0], [77.3, 7427.0], [77.4, 7427.0], [77.5, 7537.0], [77.6, 7537.0], [77.7, 7537.0], [77.8, 7543.0], [77.9, 7543.0], [78.0, 7543.0], [78.1, 7543.0], [78.2, 7544.0], [78.3, 7544.0], [78.4, 7544.0], [78.5, 7667.0], [78.6, 7667.0], [78.7, 7667.0], [78.8, 7667.0], [78.9, 7860.0], [79.0, 7860.0], [79.1, 7860.0], [79.2, 8006.0], [79.3, 8006.0], [79.4, 8006.0], [79.5, 8006.0], [79.6, 8444.0], [79.7, 8444.0], [79.8, 8444.0], [79.9, 8609.0], [80.0, 8609.0], [80.1, 8609.0], [80.2, 8609.0], [80.3, 8777.0], [80.4, 8777.0], [80.5, 8777.0], [80.6, 8823.0], [80.7, 8823.0], [80.8, 8823.0], [80.9, 8823.0], [81.0, 8897.0], [81.1, 8897.0], [81.2, 8897.0], [81.3, 8901.0], [81.4, 8901.0], [81.5, 8901.0], [81.6, 9016.0], [81.7, 9016.0], [81.8, 9016.0], [81.9, 9016.0], [82.0, 9035.0], [82.1, 9035.0], [82.2, 9035.0], [82.3, 9127.0], [82.4, 9127.0], [82.5, 9127.0], [82.6, 9127.0], [82.7, 9189.0], [82.8, 9189.0], [82.9, 9189.0], [83.0, 9200.0], [83.1, 9200.0], [83.2, 9200.0], [83.3, 9200.0], [83.4, 9300.0], [83.5, 9300.0], [83.6, 9300.0], [83.7, 9372.0], [83.8, 9372.0], [83.9, 9372.0], [84.0, 9372.0], [84.1, 9400.0], [84.2, 9400.0], [84.3, 9400.0], [84.4, 9417.0], [84.5, 9417.0], [84.6, 9417.0], [84.7, 9417.0], [84.8, 9435.0], [84.9, 9435.0], [85.0, 9435.0], [85.1, 9561.0], [85.2, 9561.0], [85.3, 9561.0], [85.4, 9561.0], [85.5, 9722.0], [85.6, 9722.0], [85.7, 9722.0], [85.8, 9738.0], [85.9, 9738.0], [86.0, 9738.0], [86.1, 9738.0], [86.2, 9879.0], [86.3, 9879.0], [86.4, 9879.0], [86.5, 9911.0], [86.6, 9911.0], [86.7, 9911.0], [86.8, 9911.0], [86.9, 9980.0], [87.0, 9980.0], [87.1, 9980.0], [87.2, 10116.0], [87.3, 10116.0], [87.4, 10116.0], [87.5, 10116.0], [87.6, 10136.0], [87.7, 10136.0], [87.8, 10136.0], [87.9, 10149.0], [88.0, 10149.0], [88.1, 10149.0], [88.2, 10715.0], [88.3, 10715.0], [88.4, 10715.0], [88.5, 10715.0], [88.6, 10761.0], [88.7, 10761.0], [88.8, 10761.0], [88.9, 10780.0], [89.0, 10780.0], [89.1, 10780.0], [89.2, 10780.0], [89.3, 10850.0], [89.4, 10850.0], [89.5, 10850.0], [89.6, 10850.0], [89.7, 10850.0], [89.8, 10850.0], [89.9, 10850.0], [90.0, 10926.0], [90.1, 10926.0], [90.2, 10926.0], [90.3, 11003.0], [90.4, 11003.0], [90.5, 11003.0], [90.6, 11003.0], [90.7, 11048.0], [90.8, 11048.0], [90.9, 11048.0], [91.0, 11099.0], [91.1, 11099.0], [91.2, 11099.0], [91.3, 11099.0], [91.4, 11102.0], [91.5, 11102.0], [91.6, 11102.0], [91.7, 11229.0], [91.8, 11229.0], [91.9, 11229.0], [92.0, 11229.0], [92.1, 11368.0], [92.2, 11368.0], [92.3, 11368.0], [92.4, 11451.0], [92.5, 11451.0], [92.6, 11451.0], [92.7, 11451.0], [92.8, 12008.0], [92.9, 12008.0], [93.0, 12008.0], [93.1, 12334.0], [93.2, 12334.0], [93.3, 12334.0], [93.4, 12334.0], [93.5, 12794.0], [93.6, 12794.0], [93.7, 12794.0], [93.8, 14156.0], [93.9, 14156.0], [94.0, 14156.0], [94.1, 14791.0], [94.2, 14791.0], [94.3, 14791.0], [94.4, 14791.0], [94.5, 14935.0], [94.6, 14935.0], [94.7, 14935.0], [94.8, 15003.0], [94.9, 15003.0], [95.0, 15003.0], [95.1, 15003.0], [95.2, 15484.0], [95.3, 15484.0], [95.4, 15484.0], [95.5, 16246.0], [95.6, 16246.0], [95.7, 16246.0], [95.8, 16246.0], [95.9, 16379.0], [96.0, 16379.0], [96.1, 16379.0], [96.2, 17868.0], [96.3, 17868.0], [96.4, 17868.0], [96.5, 17868.0], [96.6, 18537.0], [96.7, 18537.0], [96.8, 18537.0], [96.9, 18630.0], [97.0, 18630.0], [97.1, 18630.0], [97.2, 18630.0], [97.3, 19852.0], [97.4, 19852.0], [97.5, 19852.0], [97.6, 20014.0], [97.7, 20014.0], [97.8, 20014.0], [97.9, 20014.0], [98.0, 20338.0], [98.1, 20338.0], [98.2, 20338.0], [98.3, 20552.0], [98.4, 20552.0], [98.5, 20552.0], [98.6, 20552.0], [98.7, 20554.0], [98.8, 20554.0], [98.9, 20554.0], [99.0, 20777.0], [99.1, 20777.0], [99.2, 20777.0], [99.3, 20777.0], [99.4, 21621.0], [99.5, 21621.0], [99.6, 21621.0], [99.7, 25053.0], [99.8, 25053.0], [99.9, 25053.0], [100.0, 25053.0]], "isOverall": false, "label": "-16", "isController": false}, {"data": [[0.0, 221.0], [0.1, 221.0], [0.2, 221.0], [0.3, 221.0], [0.4, 221.0], [0.5, 221.0], [0.6, 230.0], [0.7, 230.0], [0.8, 230.0], [0.9, 230.0], [1.0, 230.0], [1.1, 230.0], [1.2, 232.0], [1.3, 232.0], [1.4, 232.0], [1.5, 232.0], [1.6, 232.0], [1.7, 232.0], [1.8, 232.0], [1.9, 232.0], [2.0, 232.0], [2.1, 232.0], [2.2, 232.0], [2.3, 240.0], [2.4, 240.0], [2.5, 240.0], [2.6, 240.0], [2.7, 240.0], [2.8, 240.0], [2.9, 240.0], [3.0, 240.0], [3.1, 240.0], [3.2, 240.0], [3.3, 240.0], [3.4, 240.0], [3.5, 243.0], [3.6, 243.0], [3.7, 243.0], [3.8, 243.0], [3.9, 243.0], [4.0, 244.0], [4.1, 244.0], [4.2, 244.0], [4.3, 244.0], [4.4, 244.0], [4.5, 244.0], [4.6, 254.0], [4.7, 254.0], [4.8, 254.0], [4.9, 254.0], [5.0, 254.0], [5.1, 254.0], [5.2, 255.0], [5.3, 255.0], [5.4, 255.0], [5.5, 255.0], [5.6, 255.0], [5.7, 255.0], [5.8, 256.0], [5.9, 256.0], [6.0, 256.0], [6.1, 256.0], [6.2, 256.0], [6.3, 258.0], [6.4, 258.0], [6.5, 258.0], [6.6, 258.0], [6.7, 258.0], [6.8, 258.0], [6.9, 272.0], [7.0, 272.0], [7.1, 272.0], [7.2, 272.0], [7.3, 272.0], [7.4, 272.0], [7.5, 273.0], [7.6, 273.0], [7.7, 273.0], [7.8, 273.0], [7.9, 273.0], [8.0, 273.0], [8.1, 273.0], [8.2, 273.0], [8.3, 273.0], [8.4, 273.0], [8.5, 273.0], [8.6, 281.0], [8.7, 281.0], [8.8, 281.0], [8.9, 281.0], [9.0, 281.0], [9.1, 281.0], [9.2, 293.0], [9.3, 293.0], [9.4, 293.0], [9.5, 293.0], [9.6, 293.0], [9.7, 293.0], [9.8, 293.0], [9.9, 293.0], [10.0, 293.0], [10.1, 293.0], [10.2, 293.0], [10.3, 295.0], [10.4, 295.0], [10.5, 295.0], [10.6, 295.0], [10.7, 295.0], [10.8, 295.0], [10.9, 296.0], [11.0, 296.0], [11.1, 296.0], [11.2, 296.0], [11.3, 296.0], [11.4, 296.0], [11.5, 306.0], [11.6, 306.0], [11.7, 306.0], [11.8, 306.0], [11.9, 306.0], [12.0, 310.0], [12.1, 310.0], [12.2, 310.0], [12.3, 310.0], [12.4, 310.0], [12.5, 310.0], [12.6, 313.0], [12.7, 313.0], [12.8, 313.0], [12.9, 313.0], [13.0, 313.0], [13.1, 313.0], [13.2, 316.0], [13.3, 316.0], [13.4, 316.0], [13.5, 316.0], [13.6, 316.0], [13.7, 316.0], [13.8, 318.0], [13.9, 318.0], [14.0, 318.0], [14.1, 318.0], [14.2, 318.0], [14.3, 327.0], [14.4, 327.0], [14.5, 327.0], [14.6, 327.0], [14.7, 327.0], [14.8, 327.0], [14.9, 331.0], [15.0, 331.0], [15.1, 331.0], [15.2, 331.0], [15.3, 331.0], [15.4, 331.0], [15.5, 332.0], [15.6, 332.0], [15.7, 332.0], [15.8, 332.0], [15.9, 332.0], [16.0, 346.0], [16.1, 346.0], [16.2, 346.0], [16.3, 346.0], [16.4, 346.0], [16.5, 346.0], [16.6, 349.0], [16.7, 349.0], [16.8, 349.0], [16.9, 349.0], [17.0, 349.0], [17.1, 349.0], [17.2, 358.0], [17.3, 358.0], [17.4, 358.0], [17.5, 358.0], [17.6, 358.0], [17.7, 358.0], [17.8, 361.0], [17.9, 361.0], [18.0, 361.0], [18.1, 361.0], [18.2, 361.0], [18.3, 370.0], [18.4, 370.0], [18.5, 370.0], [18.6, 370.0], [18.7, 370.0], [18.8, 370.0], [18.9, 370.0], [19.0, 370.0], [19.1, 370.0], [19.2, 370.0], [19.3, 370.0], [19.4, 370.0], [19.5, 373.0], [19.6, 373.0], [19.7, 373.0], [19.8, 373.0], [19.9, 373.0], [20.0, 374.0], [20.1, 374.0], [20.2, 374.0], [20.3, 374.0], [20.4, 374.0], [20.5, 374.0], [20.6, 375.0], [20.7, 375.0], [20.8, 375.0], [20.9, 375.0], [21.0, 375.0], [21.1, 375.0], [21.2, 380.0], [21.3, 380.0], [21.4, 380.0], [21.5, 380.0], [21.6, 380.0], [21.7, 380.0], [21.8, 384.0], [21.9, 384.0], [22.0, 384.0], [22.1, 384.0], [22.2, 384.0], [22.3, 390.0], [22.4, 390.0], [22.5, 390.0], [22.6, 390.0], [22.7, 390.0], [22.8, 390.0], [22.9, 390.0], [23.0, 390.0], [23.1, 390.0], [23.2, 390.0], [23.3, 390.0], [23.4, 390.0], [23.5, 394.0], [23.6, 394.0], [23.7, 394.0], [23.8, 394.0], [23.9, 394.0], [24.0, 394.0], [24.1, 394.0], [24.2, 394.0], [24.3, 394.0], [24.4, 394.0], [24.5, 394.0], [24.6, 398.0], [24.7, 398.0], [24.8, 398.0], [24.9, 398.0], [25.0, 398.0], [25.1, 398.0], [25.2, 402.0], [25.3, 402.0], [25.4, 402.0], [25.5, 402.0], [25.6, 402.0], [25.7, 402.0], [25.8, 409.0], [25.9, 409.0], [26.0, 409.0], [26.1, 409.0], [26.2, 409.0], [26.3, 411.0], [26.4, 411.0], [26.5, 411.0], [26.6, 411.0], [26.7, 411.0], [26.8, 411.0], [26.9, 419.0], [27.0, 419.0], [27.1, 419.0], [27.2, 419.0], [27.3, 419.0], [27.4, 419.0], [27.5, 431.0], [27.6, 431.0], [27.7, 431.0], [27.8, 431.0], [27.9, 431.0], [28.0, 431.0], [28.1, 439.0], [28.2, 439.0], [28.3, 439.0], [28.4, 439.0], [28.5, 439.0], [28.6, 463.0], [28.7, 463.0], [28.8, 463.0], [28.9, 463.0], [29.0, 463.0], [29.1, 463.0], [29.2, 472.0], [29.3, 472.0], [29.4, 472.0], [29.5, 472.0], [29.6, 472.0], [29.7, 472.0], [29.8, 474.0], [29.9, 474.0], [30.0, 474.0], [30.1, 474.0], [30.2, 474.0], [30.3, 476.0], [30.4, 476.0], [30.5, 476.0], [30.6, 476.0], [30.7, 476.0], [30.8, 476.0], [30.9, 482.0], [31.0, 482.0], [31.1, 482.0], [31.2, 482.0], [31.3, 482.0], [31.4, 482.0], [31.5, 486.0], [31.6, 486.0], [31.7, 486.0], [31.8, 486.0], [31.9, 486.0], [32.0, 486.0], [32.1, 486.0], [32.2, 486.0], [32.3, 486.0], [32.4, 486.0], [32.5, 486.0], [32.6, 486.0], [32.7, 486.0], [32.8, 486.0], [32.9, 486.0], [33.0, 486.0], [33.1, 486.0], [33.2, 507.0], [33.3, 507.0], [33.4, 507.0], [33.5, 507.0], [33.6, 507.0], [33.7, 507.0], [33.8, 508.0], [33.9, 508.0], [34.0, 508.0], [34.1, 508.0], [34.2, 508.0], [34.3, 515.0], [34.4, 515.0], [34.5, 515.0], [34.6, 515.0], [34.7, 515.0], [34.8, 515.0], [34.9, 528.0], [35.0, 528.0], [35.1, 528.0], [35.2, 528.0], [35.3, 528.0], [35.4, 528.0], [35.5, 534.0], [35.6, 534.0], [35.7, 534.0], [35.8, 534.0], [35.9, 534.0], [36.0, 534.0], [36.1, 539.0], [36.2, 539.0], [36.3, 539.0], [36.4, 539.0], [36.5, 539.0], [36.6, 567.0], [36.7, 567.0], [36.8, 567.0], [36.9, 567.0], [37.0, 567.0], [37.1, 567.0], [37.2, 578.0], [37.3, 578.0], [37.4, 578.0], [37.5, 578.0], [37.6, 578.0], [37.7, 578.0], [37.8, 588.0], [37.9, 588.0], [38.0, 588.0], [38.1, 588.0], [38.2, 588.0], [38.3, 595.0], [38.4, 595.0], [38.5, 595.0], [38.6, 595.0], [38.7, 595.0], [38.8, 595.0], [38.9, 597.0], [39.0, 597.0], [39.1, 597.0], [39.2, 597.0], [39.3, 597.0], [39.4, 597.0], [39.5, 615.0], [39.6, 615.0], [39.7, 615.0], [39.8, 615.0], [39.9, 615.0], [40.0, 620.0], [40.1, 620.0], [40.2, 620.0], [40.3, 620.0], [40.4, 620.0], [40.5, 620.0], [40.6, 623.0], [40.7, 623.0], [40.8, 623.0], [40.9, 623.0], [41.0, 623.0], [41.1, 623.0], [41.2, 651.0], [41.3, 651.0], [41.4, 651.0], [41.5, 651.0], [41.6, 651.0], [41.7, 651.0], [41.8, 668.0], [41.9, 668.0], [42.0, 668.0], [42.1, 668.0], [42.2, 668.0], [42.3, 676.0], [42.4, 676.0], [42.5, 676.0], [42.6, 676.0], [42.7, 676.0], [42.8, 676.0], [42.9, 677.0], [43.0, 677.0], [43.1, 677.0], [43.2, 677.0], [43.3, 677.0], [43.4, 677.0], [43.5, 680.0], [43.6, 680.0], [43.7, 680.0], [43.8, 680.0], [43.9, 680.0], [44.0, 764.0], [44.1, 764.0], [44.2, 764.0], [44.3, 764.0], [44.4, 764.0], [44.5, 764.0], [44.6, 772.0], [44.7, 772.0], [44.8, 772.0], [44.9, 772.0], [45.0, 772.0], [45.1, 772.0], [45.2, 773.0], [45.3, 773.0], [45.4, 773.0], [45.5, 773.0], [45.6, 773.0], [45.7, 773.0], [45.8, 789.0], [45.9, 789.0], [46.0, 789.0], [46.1, 789.0], [46.2, 789.0], [46.3, 834.0], [46.4, 834.0], [46.5, 834.0], [46.6, 834.0], [46.7, 834.0], [46.8, 834.0], [46.9, 846.0], [47.0, 846.0], [47.1, 846.0], [47.2, 846.0], [47.3, 846.0], [47.4, 846.0], [47.5, 885.0], [47.6, 885.0], [47.7, 885.0], [47.8, 885.0], [47.9, 885.0], [48.0, 961.0], [48.1, 961.0], [48.2, 961.0], [48.3, 961.0], [48.4, 961.0], [48.5, 961.0], [48.6, 976.0], [48.7, 976.0], [48.8, 976.0], [48.9, 976.0], [49.0, 976.0], [49.1, 976.0], [49.2, 1047.0], [49.3, 1047.0], [49.4, 1047.0], [49.5, 1047.0], [49.6, 1047.0], [49.7, 1047.0], [49.8, 1062.0], [49.9, 1062.0], [50.0, 1062.0], [50.1, 1062.0], [50.2, 1062.0], [50.3, 1256.0], [50.4, 1256.0], [50.5, 1256.0], [50.6, 1256.0], [50.7, 1256.0], [50.8, 1256.0], [50.9, 1290.0], [51.0, 1290.0], [51.1, 1290.0], [51.2, 1290.0], [51.3, 1290.0], [51.4, 1290.0], [51.5, 1316.0], [51.6, 1316.0], [51.7, 1316.0], [51.8, 1316.0], [51.9, 1316.0], [52.0, 1446.0], [52.1, 1446.0], [52.2, 1446.0], [52.3, 1446.0], [52.4, 1446.0], [52.5, 1446.0], [52.6, 1447.0], [52.7, 1447.0], [52.8, 1447.0], [52.9, 1447.0], [53.0, 1447.0], [53.1, 1447.0], [53.2, 1477.0], [53.3, 1477.0], [53.4, 1477.0], [53.5, 1477.0], [53.6, 1477.0], [53.7, 1477.0], [53.8, 1498.0], [53.9, 1498.0], [54.0, 1498.0], [54.1, 1498.0], [54.2, 1498.0], [54.3, 1510.0], [54.4, 1510.0], [54.5, 1510.0], [54.6, 1510.0], [54.7, 1510.0], [54.8, 1510.0], [54.9, 1590.0], [55.0, 1590.0], [55.1, 1590.0], [55.2, 1590.0], [55.3, 1590.0], [55.4, 1590.0], [55.5, 1649.0], [55.6, 1649.0], [55.7, 1649.0], [55.8, 1649.0], [55.9, 1649.0], [56.0, 1659.0], [56.1, 1659.0], [56.2, 1659.0], [56.3, 1659.0], [56.4, 1659.0], [56.5, 1659.0], [56.6, 1723.0], [56.7, 1723.0], [56.8, 1723.0], [56.9, 1723.0], [57.0, 1723.0], [57.1, 1723.0], [57.2, 1741.0], [57.3, 1741.0], [57.4, 1741.0], [57.5, 1741.0], [57.6, 1741.0], [57.7, 1741.0], [57.8, 1764.0], [57.9, 1764.0], [58.0, 1764.0], [58.1, 1764.0], [58.2, 1764.0], [58.3, 1826.0], [58.4, 1826.0], [58.5, 1826.0], [58.6, 1826.0], [58.7, 1826.0], [58.8, 1826.0], [58.9, 1859.0], [59.0, 1859.0], [59.1, 1859.0], [59.2, 1859.0], [59.3, 1859.0], [59.4, 1859.0], [59.5, 1871.0], [59.6, 1871.0], [59.7, 1871.0], [59.8, 1871.0], [59.9, 1871.0], [60.0, 1875.0], [60.1, 1875.0], [60.2, 1875.0], [60.3, 1875.0], [60.4, 1875.0], [60.5, 1875.0], [60.6, 1995.0], [60.7, 1995.0], [60.8, 1995.0], [60.9, 1995.0], [61.0, 1995.0], [61.1, 1995.0], [61.2, 2023.0], [61.3, 2023.0], [61.4, 2023.0], [61.5, 2023.0], [61.6, 2023.0], [61.7, 2023.0], [61.8, 2244.0], [61.9, 2244.0], [62.0, 2244.0], [62.1, 2244.0], [62.2, 2244.0], [62.3, 2258.0], [62.4, 2258.0], [62.5, 2258.0], [62.6, 2258.0], [62.7, 2258.0], [62.8, 2258.0], [62.9, 2258.0], [63.0, 2258.0], [63.1, 2258.0], [63.2, 2258.0], [63.3, 2258.0], [63.4, 2258.0], [63.5, 2328.0], [63.6, 2328.0], [63.7, 2328.0], [63.8, 2328.0], [63.9, 2328.0], [64.0, 2493.0], [64.1, 2493.0], [64.2, 2493.0], [64.3, 2493.0], [64.4, 2493.0], [64.5, 2493.0], [64.6, 2503.0], [64.7, 2503.0], [64.8, 2503.0], [64.9, 2503.0], [65.0, 2503.0], [65.1, 2503.0], [65.2, 2542.0], [65.3, 2542.0], [65.4, 2542.0], [65.5, 2542.0], [65.6, 2542.0], [65.7, 2542.0], [65.8, 2579.0], [65.9, 2579.0], [66.0, 2579.0], [66.1, 2579.0], [66.2, 2579.0], [66.3, 2624.0], [66.4, 2624.0], [66.5, 2624.0], [66.6, 2624.0], [66.7, 2624.0], [66.8, 2624.0], [66.9, 2781.0], [67.0, 2781.0], [67.1, 2781.0], [67.2, 2781.0], [67.3, 2781.0], [67.4, 2781.0], [67.5, 2799.0], [67.6, 2799.0], [67.7, 2799.0], [67.8, 2799.0], [67.9, 2799.0], [68.0, 2880.0], [68.1, 2880.0], [68.2, 2880.0], [68.3, 2880.0], [68.4, 2880.0], [68.5, 2880.0], [68.6, 2950.0], [68.7, 2950.0], [68.8, 2950.0], [68.9, 2950.0], [69.0, 2950.0], [69.1, 2950.0], [69.2, 2992.0], [69.3, 2992.0], [69.4, 2992.0], [69.5, 2992.0], [69.6, 2992.0], [69.7, 2992.0], [69.8, 3123.0], [69.9, 3123.0], [70.0, 3123.0], [70.1, 3123.0], [70.2, 3123.0], [70.3, 3372.0], [70.4, 3372.0], [70.5, 3372.0], [70.6, 3372.0], [70.7, 3372.0], [70.8, 3372.0], [70.9, 3762.0], [71.0, 3762.0], [71.1, 3762.0], [71.2, 3762.0], [71.3, 3762.0], [71.4, 3762.0], [71.5, 3800.0], [71.6, 3800.0], [71.7, 3800.0], [71.8, 3800.0], [71.9, 3800.0], [72.0, 3859.0], [72.1, 3859.0], [72.2, 3859.0], [72.3, 3859.0], [72.4, 3859.0], [72.5, 3859.0], [72.6, 3906.0], [72.7, 3906.0], [72.8, 3906.0], [72.9, 3906.0], [73.0, 3906.0], [73.1, 3906.0], [73.2, 4033.0], [73.3, 4033.0], [73.4, 4033.0], [73.5, 4033.0], [73.6, 4033.0], [73.7, 4033.0], [73.8, 4065.0], [73.9, 4065.0], [74.0, 4065.0], [74.1, 4065.0], [74.2, 4065.0], [74.3, 4148.0], [74.4, 4148.0], [74.5, 4148.0], [74.6, 4148.0], [74.7, 4148.0], [74.8, 4148.0], [74.9, 4375.0], [75.0, 4375.0], [75.1, 4375.0], [75.2, 4375.0], [75.3, 4375.0], [75.4, 4375.0], [75.5, 4651.0], [75.6, 4651.0], [75.7, 4651.0], [75.8, 4651.0], [75.9, 4651.0], [76.0, 4801.0], [76.1, 4801.0], [76.2, 4801.0], [76.3, 4801.0], [76.4, 4801.0], [76.5, 4801.0], [76.6, 4808.0], [76.7, 4808.0], [76.8, 4808.0], [76.9, 4808.0], [77.0, 4808.0], [77.1, 4808.0], [77.2, 4881.0], [77.3, 4881.0], [77.4, 4881.0], [77.5, 4881.0], [77.6, 4881.0], [77.7, 4881.0], [77.8, 4989.0], [77.9, 4989.0], [78.0, 4989.0], [78.1, 4989.0], [78.2, 4989.0], [78.3, 5134.0], [78.4, 5134.0], [78.5, 5134.0], [78.6, 5134.0], [78.7, 5134.0], [78.8, 5134.0], [78.9, 5167.0], [79.0, 5167.0], [79.1, 5167.0], [79.2, 5167.0], [79.3, 5167.0], [79.4, 5167.0], [79.5, 5330.0], [79.6, 5330.0], [79.7, 5330.0], [79.8, 5330.0], [79.9, 5330.0], [80.0, 5434.0], [80.1, 5434.0], [80.2, 5434.0], [80.3, 5434.0], [80.4, 5434.0], [80.5, 5434.0], [80.6, 5881.0], [80.7, 5881.0], [80.8, 5881.0], [80.9, 5881.0], [81.0, 5881.0], [81.1, 5881.0], [81.2, 5999.0], [81.3, 5999.0], [81.4, 5999.0], [81.5, 5999.0], [81.6, 5999.0], [81.7, 5999.0], [81.8, 6234.0], [81.9, 6234.0], [82.0, 6234.0], [82.1, 6234.0], [82.2, 6234.0], [82.3, 6273.0], [82.4, 6273.0], [82.5, 6273.0], [82.6, 6273.0], [82.7, 6273.0], [82.8, 6273.0], [82.9, 6345.0], [83.0, 6345.0], [83.1, 6345.0], [83.2, 6345.0], [83.3, 6345.0], [83.4, 6345.0], [83.5, 6499.0], [83.6, 6499.0], [83.7, 6499.0], [83.8, 6499.0], [83.9, 6499.0], [84.0, 6768.0], [84.1, 6768.0], [84.2, 6768.0], [84.3, 6768.0], [84.4, 6768.0], [84.5, 6768.0], [84.6, 6894.0], [84.7, 6894.0], [84.8, 6894.0], [84.9, 6894.0], [85.0, 6894.0], [85.1, 6894.0], [85.2, 7232.0], [85.3, 7232.0], [85.4, 7232.0], [85.5, 7232.0], [85.6, 7232.0], [85.7, 7232.0], [85.8, 7359.0], [85.9, 7359.0], [86.0, 7359.0], [86.1, 7359.0], [86.2, 7359.0], [86.3, 7461.0], [86.4, 7461.0], [86.5, 7461.0], [86.6, 7461.0], [86.7, 7461.0], [86.8, 7461.0], [86.9, 7581.0], [87.0, 7581.0], [87.1, 7581.0], [87.2, 7581.0], [87.3, 7581.0], [87.4, 7581.0], [87.5, 7770.0], [87.6, 7770.0], [87.7, 7770.0], [87.8, 7770.0], [87.9, 7770.0], [88.0, 7855.0], [88.1, 7855.0], [88.2, 7855.0], [88.3, 7855.0], [88.4, 7855.0], [88.5, 7855.0], [88.6, 7896.0], [88.7, 7896.0], [88.8, 7896.0], [88.9, 7896.0], [89.0, 7896.0], [89.1, 7896.0], [89.2, 7902.0], [89.3, 7902.0], [89.4, 7902.0], [89.5, 7902.0], [89.6, 7902.0], [89.7, 7902.0], [89.8, 8273.0], [89.9, 8273.0], [90.0, 8273.0], [90.1, 8273.0], [90.2, 8273.0], [90.3, 8498.0], [90.4, 8498.0], [90.5, 8498.0], [90.6, 8498.0], [90.7, 8498.0], [90.8, 8498.0], [90.9, 8866.0], [91.0, 8866.0], [91.1, 8866.0], [91.2, 8866.0], [91.3, 8866.0], [91.4, 8866.0], [91.5, 8947.0], [91.6, 8947.0], [91.7, 8947.0], [91.8, 8947.0], [91.9, 8947.0], [92.0, 9263.0], [92.1, 9263.0], [92.2, 9263.0], [92.3, 9263.0], [92.4, 9263.0], [92.5, 9263.0], [92.6, 9843.0], [92.7, 9843.0], [92.8, 9843.0], [92.9, 9843.0], [93.0, 9843.0], [93.1, 9843.0], [93.2, 10069.0], [93.3, 10069.0], [93.4, 10069.0], [93.5, 10069.0], [93.6, 10069.0], [93.7, 10069.0], [93.8, 10084.0], [93.9, 10084.0], [94.0, 10084.0], [94.1, 10084.0], [94.2, 10084.0], [94.3, 10106.0], [94.4, 10106.0], [94.5, 10106.0], [94.6, 10106.0], [94.7, 10106.0], [94.8, 10106.0], [94.9, 10371.0], [95.0, 10371.0], [95.1, 10371.0], [95.2, 10371.0], [95.3, 10371.0], [95.4, 10371.0], [95.5, 11314.0], [95.6, 11314.0], [95.7, 11314.0], [95.8, 11314.0], [95.9, 11314.0], [96.0, 13658.0], [96.1, 13658.0], [96.2, 13658.0], [96.3, 13658.0], [96.4, 13658.0], [96.5, 13658.0], [96.6, 17082.0], [96.7, 17082.0], [96.8, 17082.0], [96.9, 17082.0], [97.0, 17082.0], [97.1, 17082.0], [97.2, 18630.0], [97.3, 18630.0], [97.4, 18630.0], [97.5, 18630.0], [97.6, 18630.0], [97.7, 18630.0], [97.8, 19932.0], [97.9, 19932.0], [98.0, 19932.0], [98.1, 19932.0], [98.2, 19932.0], [98.3, 20188.0], [98.4, 20188.0], [98.5, 20188.0], [98.6, 20188.0], [98.7, 20188.0], [98.8, 20188.0], [98.9, 20822.0], [99.0, 20822.0], [99.1, 20822.0], [99.2, 20822.0], [99.3, 20822.0], [99.4, 20822.0], [99.5, 21448.0], [99.6, 21448.0], [99.7, 21448.0], [99.8, 21448.0], [99.9, 21448.0]], "isOverall": false, "label": "-17", "isController": false}, {"data": [[0.0, 238.0], [0.1, 238.0], [0.2, 238.0], [0.3, 238.0], [0.4, 238.0], [0.5, 238.0], [0.6, 238.0], [0.7, 238.0], [0.8, 238.0], [0.9, 238.0], [1.0, 244.0], [1.1, 244.0], [1.2, 244.0], [1.3, 244.0], [1.4, 244.0], [1.5, 244.0], [1.6, 244.0], [1.7, 244.0], [1.8, 244.0], [1.9, 244.0], [2.0, 245.0], [2.1, 245.0], [2.2, 245.0], [2.3, 245.0], [2.4, 245.0], [2.5, 245.0], [2.6, 245.0], [2.7, 245.0], [2.8, 245.0], [2.9, 245.0], [3.0, 247.0], [3.1, 247.0], [3.2, 247.0], [3.3, 247.0], [3.4, 247.0], [3.5, 247.0], [3.6, 247.0], [3.7, 247.0], [3.8, 247.0], [3.9, 247.0], [4.0, 247.0], [4.1, 247.0], [4.2, 247.0], [4.3, 247.0], [4.4, 247.0], [4.5, 247.0], [4.6, 247.0], [4.7, 247.0], [4.8, 247.0], [4.9, 251.0], [5.0, 251.0], [5.1, 251.0], [5.2, 251.0], [5.3, 251.0], [5.4, 251.0], [5.5, 251.0], [5.6, 251.0], [5.7, 251.0], [5.8, 251.0], [5.9, 257.0], [6.0, 257.0], [6.1, 257.0], [6.2, 257.0], [6.3, 257.0], [6.4, 257.0], [6.5, 257.0], [6.6, 257.0], [6.7, 257.0], [6.8, 260.0], [6.9, 260.0], [7.0, 260.0], [7.1, 260.0], [7.2, 260.0], [7.3, 260.0], [7.4, 260.0], [7.5, 260.0], [7.6, 260.0], [7.7, 260.0], [7.8, 261.0], [7.9, 261.0], [8.0, 261.0], [8.1, 261.0], [8.2, 261.0], [8.3, 261.0], [8.4, 261.0], [8.5, 261.0], [8.6, 261.0], [8.7, 261.0], [8.8, 264.0], [8.9, 264.0], [9.0, 264.0], [9.1, 264.0], [9.2, 264.0], [9.3, 264.0], [9.4, 264.0], [9.5, 264.0], [9.6, 264.0], [9.7, 264.0], [9.8, 267.0], [9.9, 267.0], [10.0, 267.0], [10.1, 267.0], [10.2, 267.0], [10.3, 267.0], [10.4, 267.0], [10.5, 267.0], [10.6, 267.0], [10.7, 275.0], [10.8, 275.0], [10.9, 275.0], [11.0, 275.0], [11.1, 275.0], [11.2, 275.0], [11.3, 275.0], [11.4, 275.0], [11.5, 275.0], [11.6, 275.0], [11.7, 280.0], [11.8, 280.0], [11.9, 280.0], [12.0, 280.0], [12.1, 280.0], [12.2, 280.0], [12.3, 280.0], [12.4, 280.0], [12.5, 280.0], [12.6, 280.0], [12.7, 282.0], [12.8, 282.0], [12.9, 282.0], [13.0, 282.0], [13.1, 282.0], [13.2, 282.0], [13.3, 282.0], [13.4, 282.0], [13.5, 282.0], [13.6, 283.0], [13.7, 283.0], [13.8, 283.0], [13.9, 283.0], [14.0, 283.0], [14.1, 283.0], [14.2, 283.0], [14.3, 283.0], [14.4, 283.0], [14.5, 283.0], [14.6, 295.0], [14.7, 295.0], [14.8, 295.0], [14.9, 295.0], [15.0, 295.0], [15.1, 295.0], [15.2, 295.0], [15.3, 295.0], [15.4, 295.0], [15.5, 295.0], [15.6, 297.0], [15.7, 297.0], [15.8, 297.0], [15.9, 297.0], [16.0, 297.0], [16.1, 297.0], [16.2, 297.0], [16.3, 297.0], [16.4, 297.0], [16.5, 297.0], [16.6, 297.0], [16.7, 297.0], [16.8, 297.0], [16.9, 297.0], [17.0, 297.0], [17.1, 297.0], [17.2, 297.0], [17.3, 297.0], [17.4, 297.0], [17.5, 303.0], [17.6, 303.0], [17.7, 303.0], [17.8, 303.0], [17.9, 303.0], [18.0, 303.0], [18.1, 303.0], [18.2, 303.0], [18.3, 303.0], [18.4, 303.0], [18.5, 303.0], [18.6, 303.0], [18.7, 303.0], [18.8, 303.0], [18.9, 303.0], [19.0, 303.0], [19.1, 303.0], [19.2, 303.0], [19.3, 303.0], [19.4, 303.0], [19.5, 304.0], [19.6, 304.0], [19.7, 304.0], [19.8, 304.0], [19.9, 304.0], [20.0, 304.0], [20.1, 304.0], [20.2, 304.0], [20.3, 304.0], [20.4, 307.0], [20.5, 307.0], [20.6, 307.0], [20.7, 307.0], [20.8, 307.0], [20.9, 307.0], [21.0, 307.0], [21.1, 307.0], [21.2, 307.0], [21.3, 307.0], [21.4, 308.0], [21.5, 308.0], [21.6, 308.0], [21.7, 308.0], [21.8, 308.0], [21.9, 308.0], [22.0, 308.0], [22.1, 308.0], [22.2, 308.0], [22.3, 308.0], [22.4, 309.0], [22.5, 309.0], [22.6, 309.0], [22.7, 309.0], [22.8, 309.0], [22.9, 309.0], [23.0, 309.0], [23.1, 309.0], [23.2, 309.0], [23.3, 309.0], [23.4, 317.0], [23.5, 317.0], [23.6, 317.0], [23.7, 317.0], [23.8, 317.0], [23.9, 317.0], [24.0, 317.0], [24.1, 317.0], [24.2, 317.0], [24.3, 319.0], [24.4, 319.0], [24.5, 319.0], [24.6, 319.0], [24.7, 319.0], [24.8, 319.0], [24.9, 319.0], [25.0, 319.0], [25.1, 319.0], [25.2, 319.0], [25.3, 319.0], [25.4, 319.0], [25.5, 319.0], [25.6, 319.0], [25.7, 319.0], [25.8, 319.0], [25.9, 319.0], [26.0, 319.0], [26.1, 319.0], [26.2, 319.0], [26.3, 330.0], [26.4, 330.0], [26.5, 330.0], [26.6, 330.0], [26.7, 330.0], [26.8, 330.0], [26.9, 330.0], [27.0, 330.0], [27.1, 330.0], [27.2, 331.0], [27.3, 331.0], [27.4, 331.0], [27.5, 331.0], [27.6, 331.0], [27.7, 331.0], [27.8, 331.0], [27.9, 331.0], [28.0, 331.0], [28.1, 331.0], [28.2, 339.0], [28.3, 339.0], [28.4, 339.0], [28.5, 339.0], [28.6, 339.0], [28.7, 339.0], [28.8, 339.0], [28.9, 339.0], [29.0, 339.0], [29.1, 339.0], [29.2, 351.0], [29.3, 351.0], [29.4, 351.0], [29.5, 351.0], [29.6, 351.0], [29.7, 351.0], [29.8, 351.0], [29.9, 351.0], [30.0, 351.0], [30.1, 361.0], [30.2, 361.0], [30.3, 361.0], [30.4, 361.0], [30.5, 361.0], [30.6, 361.0], [30.7, 361.0], [30.8, 361.0], [30.9, 361.0], [31.0, 361.0], [31.1, 369.0], [31.2, 369.0], [31.3, 369.0], [31.4, 369.0], [31.5, 369.0], [31.6, 369.0], [31.7, 369.0], [31.8, 369.0], [31.9, 369.0], [32.0, 369.0], [32.1, 375.0], [32.2, 375.0], [32.3, 375.0], [32.4, 375.0], [32.5, 375.0], [32.6, 375.0], [32.7, 375.0], [32.8, 375.0], [32.9, 375.0], [33.0, 375.0], [33.1, 385.0], [33.2, 385.0], [33.3, 385.0], [33.4, 385.0], [33.5, 385.0], [33.6, 385.0], [33.7, 385.0], [33.8, 385.0], [33.9, 385.0], [34.0, 388.0], [34.1, 388.0], [34.2, 388.0], [34.3, 388.0], [34.4, 388.0], [34.5, 388.0], [34.6, 388.0], [34.7, 388.0], [34.8, 388.0], [34.9, 388.0], [35.0, 393.0], [35.1, 393.0], [35.2, 393.0], [35.3, 393.0], [35.4, 393.0], [35.5, 393.0], [35.6, 393.0], [35.7, 393.0], [35.8, 393.0], [35.9, 393.0], [36.0, 399.0], [36.1, 399.0], [36.2, 399.0], [36.3, 399.0], [36.4, 399.0], [36.5, 399.0], [36.6, 399.0], [36.7, 399.0], [36.8, 399.0], [36.9, 410.0], [37.0, 410.0], [37.1, 410.0], [37.2, 410.0], [37.3, 410.0], [37.4, 410.0], [37.5, 410.0], [37.6, 410.0], [37.7, 410.0], [37.8, 410.0], [37.9, 412.0], [38.0, 412.0], [38.1, 412.0], [38.2, 412.0], [38.3, 412.0], [38.4, 412.0], [38.5, 412.0], [38.6, 412.0], [38.7, 412.0], [38.8, 412.0], [38.9, 417.0], [39.0, 417.0], [39.1, 417.0], [39.2, 417.0], [39.3, 417.0], [39.4, 417.0], [39.5, 417.0], [39.6, 417.0], [39.7, 417.0], [39.8, 417.0], [39.9, 422.0], [40.0, 422.0], [40.1, 422.0], [40.2, 422.0], [40.3, 422.0], [40.4, 422.0], [40.5, 422.0], [40.6, 422.0], [40.7, 422.0], [40.8, 426.0], [40.9, 426.0], [41.0, 426.0], [41.1, 426.0], [41.2, 426.0], [41.3, 426.0], [41.4, 426.0], [41.5, 426.0], [41.6, 426.0], [41.7, 426.0], [41.8, 427.0], [41.9, 427.0], [42.0, 427.0], [42.1, 427.0], [42.2, 427.0], [42.3, 427.0], [42.4, 427.0], [42.5, 427.0], [42.6, 427.0], [42.7, 427.0], [42.8, 445.0], [42.9, 445.0], [43.0, 445.0], [43.1, 445.0], [43.2, 445.0], [43.3, 445.0], [43.4, 445.0], [43.5, 445.0], [43.6, 445.0], [43.7, 456.0], [43.8, 456.0], [43.9, 456.0], [44.0, 456.0], [44.1, 456.0], [44.2, 456.0], [44.3, 456.0], [44.4, 456.0], [44.5, 456.0], [44.6, 456.0], [44.7, 471.0], [44.8, 471.0], [44.9, 471.0], [45.0, 471.0], [45.1, 471.0], [45.2, 471.0], [45.3, 471.0], [45.4, 471.0], [45.5, 471.0], [45.6, 471.0], [45.7, 472.0], [45.8, 472.0], [45.9, 472.0], [46.0, 472.0], [46.1, 472.0], [46.2, 472.0], [46.3, 472.0], [46.4, 472.0], [46.5, 472.0], [46.6, 472.0], [46.7, 478.0], [46.8, 478.0], [46.9, 478.0], [47.0, 478.0], [47.1, 478.0], [47.2, 478.0], [47.3, 478.0], [47.4, 478.0], [47.5, 478.0], [47.6, 524.0], [47.7, 524.0], [47.8, 524.0], [47.9, 524.0], [48.0, 524.0], [48.1, 524.0], [48.2, 524.0], [48.3, 524.0], [48.4, 524.0], [48.5, 524.0], [48.6, 543.0], [48.7, 543.0], [48.8, 543.0], [48.9, 543.0], [49.0, 543.0], [49.1, 543.0], [49.2, 543.0], [49.3, 543.0], [49.4, 543.0], [49.5, 543.0], [49.6, 576.0], [49.7, 576.0], [49.8, 576.0], [49.9, 576.0], [50.0, 576.0], [50.1, 576.0], [50.2, 576.0], [50.3, 576.0], [50.4, 576.0], [50.5, 587.0], [50.6, 587.0], [50.7, 587.0], [50.8, 587.0], [50.9, 587.0], [51.0, 587.0], [51.1, 587.0], [51.2, 587.0], [51.3, 587.0], [51.4, 587.0], [51.5, 599.0], [51.6, 599.0], [51.7, 599.0], [51.8, 599.0], [51.9, 599.0], [52.0, 599.0], [52.1, 599.0], [52.2, 599.0], [52.3, 599.0], [52.4, 599.0], [52.5, 651.0], [52.6, 651.0], [52.7, 651.0], [52.8, 651.0], [52.9, 651.0], [53.0, 651.0], [53.1, 651.0], [53.2, 651.0], [53.3, 651.0], [53.4, 652.0], [53.5, 652.0], [53.6, 652.0], [53.7, 652.0], [53.8, 652.0], [53.9, 652.0], [54.0, 652.0], [54.1, 652.0], [54.2, 652.0], [54.3, 652.0], [54.4, 785.0], [54.5, 785.0], [54.6, 785.0], [54.7, 785.0], [54.8, 785.0], [54.9, 785.0], [55.0, 785.0], [55.1, 785.0], [55.2, 785.0], [55.3, 785.0], [55.4, 792.0], [55.5, 792.0], [55.6, 792.0], [55.7, 792.0], [55.8, 792.0], [55.9, 792.0], [56.0, 792.0], [56.1, 792.0], [56.2, 792.0], [56.3, 792.0], [56.4, 806.0], [56.5, 806.0], [56.6, 806.0], [56.7, 806.0], [56.8, 806.0], [56.9, 806.0], [57.0, 806.0], [57.1, 806.0], [57.2, 806.0], [57.3, 880.0], [57.4, 880.0], [57.5, 880.0], [57.6, 880.0], [57.7, 880.0], [57.8, 880.0], [57.9, 880.0], [58.0, 880.0], [58.1, 880.0], [58.2, 880.0], [58.3, 1001.0], [58.4, 1001.0], [58.5, 1001.0], [58.6, 1001.0], [58.7, 1001.0], [58.8, 1001.0], [58.9, 1001.0], [59.0, 1001.0], [59.1, 1001.0], [59.2, 1001.0], [59.3, 1021.0], [59.4, 1021.0], [59.5, 1021.0], [59.6, 1021.0], [59.7, 1021.0], [59.8, 1021.0], [59.9, 1021.0], [60.0, 1021.0], [60.1, 1021.0], [60.2, 1073.0], [60.3, 1073.0], [60.4, 1073.0], [60.5, 1073.0], [60.6, 1073.0], [60.7, 1073.0], [60.8, 1073.0], [60.9, 1073.0], [61.0, 1073.0], [61.1, 1073.0], [61.2, 1187.0], [61.3, 1187.0], [61.4, 1187.0], [61.5, 1187.0], [61.6, 1187.0], [61.7, 1187.0], [61.8, 1187.0], [61.9, 1187.0], [62.0, 1187.0], [62.1, 1187.0], [62.2, 1294.0], [62.3, 1294.0], [62.4, 1294.0], [62.5, 1294.0], [62.6, 1294.0], [62.7, 1294.0], [62.8, 1294.0], [62.9, 1294.0], [63.0, 1294.0], [63.1, 1294.0], [63.2, 1373.0], [63.3, 1373.0], [63.4, 1373.0], [63.5, 1373.0], [63.6, 1373.0], [63.7, 1373.0], [63.8, 1373.0], [63.9, 1373.0], [64.0, 1373.0], [64.1, 1610.0], [64.2, 1610.0], [64.3, 1610.0], [64.4, 1610.0], [64.5, 1610.0], [64.6, 1610.0], [64.7, 1610.0], [64.8, 1610.0], [64.9, 1610.0], [65.0, 1610.0], [65.1, 1820.0], [65.2, 1820.0], [65.3, 1820.0], [65.4, 1820.0], [65.5, 1820.0], [65.6, 1820.0], [65.7, 1820.0], [65.8, 1820.0], [65.9, 1820.0], [66.0, 1820.0], [66.1, 1947.0], [66.2, 1947.0], [66.3, 1947.0], [66.4, 1947.0], [66.5, 1947.0], [66.6, 1947.0], [66.7, 1947.0], [66.8, 1947.0], [66.9, 1947.0], [67.0, 1961.0], [67.1, 1961.0], [67.2, 1961.0], [67.3, 1961.0], [67.4, 1961.0], [67.5, 1961.0], [67.6, 1961.0], [67.7, 1961.0], [67.8, 1961.0], [67.9, 1961.0], [68.0, 1970.0], [68.1, 1970.0], [68.2, 1970.0], [68.3, 1970.0], [68.4, 1970.0], [68.5, 1970.0], [68.6, 1970.0], [68.7, 1970.0], [68.8, 1970.0], [68.9, 1970.0], [69.0, 2001.0], [69.1, 2001.0], [69.2, 2001.0], [69.3, 2001.0], [69.4, 2001.0], [69.5, 2001.0], [69.6, 2001.0], [69.7, 2001.0], [69.8, 2001.0], [69.9, 2001.0], [70.0, 2521.0], [70.1, 2521.0], [70.2, 2521.0], [70.3, 2521.0], [70.4, 2521.0], [70.5, 2521.0], [70.6, 2521.0], [70.7, 2521.0], [70.8, 2521.0], [70.9, 2849.0], [71.0, 2849.0], [71.1, 2849.0], [71.2, 2849.0], [71.3, 2849.0], [71.4, 2849.0], [71.5, 2849.0], [71.6, 2849.0], [71.7, 2849.0], [71.8, 2849.0], [71.9, 2863.0], [72.0, 2863.0], [72.1, 2863.0], [72.2, 2863.0], [72.3, 2863.0], [72.4, 2863.0], [72.5, 2863.0], [72.6, 2863.0], [72.7, 2863.0], [72.8, 2863.0], [72.9, 2893.0], [73.0, 2893.0], [73.1, 2893.0], [73.2, 2893.0], [73.3, 2893.0], [73.4, 2893.0], [73.5, 2893.0], [73.6, 2893.0], [73.7, 2893.0], [73.8, 2906.0], [73.9, 2906.0], [74.0, 2906.0], [74.1, 2906.0], [74.2, 2906.0], [74.3, 2906.0], [74.4, 2906.0], [74.5, 2906.0], [74.6, 2906.0], [74.7, 2906.0], [74.8, 3533.0], [74.9, 3533.0], [75.0, 3533.0], [75.1, 3533.0], [75.2, 3533.0], [75.3, 3533.0], [75.4, 3533.0], [75.5, 3533.0], [75.6, 3533.0], [75.7, 3533.0], [75.8, 4361.0], [75.9, 4361.0], [76.0, 4361.0], [76.1, 4361.0], [76.2, 4361.0], [76.3, 4361.0], [76.4, 4361.0], [76.5, 4361.0], [76.6, 4361.0], [76.7, 4884.0], [76.8, 4884.0], [76.9, 4884.0], [77.0, 4884.0], [77.1, 4884.0], [77.2, 4884.0], [77.3, 4884.0], [77.4, 4884.0], [77.5, 4884.0], [77.6, 4884.0], [77.7, 4979.0], [77.8, 4979.0], [77.9, 4979.0], [78.0, 4979.0], [78.1, 4979.0], [78.2, 4979.0], [78.3, 4979.0], [78.4, 4979.0], [78.5, 4979.0], [78.6, 4979.0], [78.7, 5081.0], [78.8, 5081.0], [78.9, 5081.0], [79.0, 5081.0], [79.1, 5081.0], [79.2, 5081.0], [79.3, 5081.0], [79.4, 5081.0], [79.5, 5081.0], [79.6, 5081.0], [79.7, 5145.0], [79.8, 5145.0], [79.9, 5145.0], [80.0, 5145.0], [80.1, 5145.0], [80.2, 5145.0], [80.3, 5145.0], [80.4, 5145.0], [80.5, 5145.0], [80.6, 5221.0], [80.7, 5221.0], [80.8, 5221.0], [80.9, 5221.0], [81.0, 5221.0], [81.1, 5221.0], [81.2, 5221.0], [81.3, 5221.0], [81.4, 5221.0], [81.5, 5221.0], [81.6, 5389.0], [81.7, 5389.0], [81.8, 5389.0], [81.9, 5389.0], [82.0, 5389.0], [82.1, 5389.0], [82.2, 5389.0], [82.3, 5389.0], [82.4, 5389.0], [82.5, 5389.0], [82.6, 5494.0], [82.7, 5494.0], [82.8, 5494.0], [82.9, 5494.0], [83.0, 5494.0], [83.1, 5494.0], [83.2, 5494.0], [83.3, 5494.0], [83.4, 5494.0], [83.5, 5851.0], [83.6, 5851.0], [83.7, 5851.0], [83.8, 5851.0], [83.9, 5851.0], [84.0, 5851.0], [84.1, 5851.0], [84.2, 5851.0], [84.3, 5851.0], [84.4, 5851.0], [84.5, 6255.0], [84.6, 6255.0], [84.7, 6255.0], [84.8, 6255.0], [84.9, 6255.0], [85.0, 6255.0], [85.1, 6255.0], [85.2, 6255.0], [85.3, 6255.0], [85.4, 6255.0], [85.5, 6338.0], [85.6, 6338.0], [85.7, 6338.0], [85.8, 6338.0], [85.9, 6338.0], [86.0, 6338.0], [86.1, 6338.0], [86.2, 6338.0], [86.3, 6338.0], [86.4, 6338.0], [86.5, 6716.0], [86.6, 6716.0], [86.7, 6716.0], [86.8, 6716.0], [86.9, 6716.0], [87.0, 6716.0], [87.1, 6716.0], [87.2, 6716.0], [87.3, 6716.0], [87.4, 7052.0], [87.5, 7052.0], [87.6, 7052.0], [87.7, 7052.0], [87.8, 7052.0], [87.9, 7052.0], [88.0, 7052.0], [88.1, 7052.0], [88.2, 7052.0], [88.3, 7052.0], [88.4, 7153.0], [88.5, 7153.0], [88.6, 7153.0], [88.7, 7153.0], [88.8, 7153.0], [88.9, 7153.0], [89.0, 7153.0], [89.1, 7153.0], [89.2, 7153.0], [89.3, 7153.0], [89.4, 7509.0], [89.5, 7509.0], [89.6, 7509.0], [89.7, 7509.0], [89.8, 7509.0], [89.9, 7509.0], [90.0, 7509.0], [90.1, 7509.0], [90.2, 7509.0], [90.3, 8593.0], [90.4, 8593.0], [90.5, 8593.0], [90.6, 8593.0], [90.7, 8593.0], [90.8, 8593.0], [90.9, 8593.0], [91.0, 8593.0], [91.1, 8593.0], [91.2, 8593.0], [91.3, 8731.0], [91.4, 8731.0], [91.5, 8731.0], [91.6, 8731.0], [91.7, 8731.0], [91.8, 8731.0], [91.9, 8731.0], [92.0, 8731.0], [92.1, 8731.0], [92.2, 8731.0], [92.3, 9328.0], [92.4, 9328.0], [92.5, 9328.0], [92.6, 9328.0], [92.7, 9328.0], [92.8, 9328.0], [92.9, 9328.0], [93.0, 9328.0], [93.1, 9328.0], [93.2, 9328.0], [93.3, 9795.0], [93.4, 9795.0], [93.5, 9795.0], [93.6, 9795.0], [93.7, 9795.0], [93.8, 9795.0], [93.9, 9795.0], [94.0, 9795.0], [94.1, 9795.0], [94.2, 10522.0], [94.3, 10522.0], [94.4, 10522.0], [94.5, 10522.0], [94.6, 10522.0], [94.7, 10522.0], [94.8, 10522.0], [94.9, 10522.0], [95.0, 10522.0], [95.1, 10522.0], [95.2, 11445.0], [95.3, 11445.0], [95.4, 11445.0], [95.5, 11445.0], [95.6, 11445.0], [95.7, 11445.0], [95.8, 11445.0], [95.9, 11445.0], [96.0, 11445.0], [96.1, 11445.0], [96.2, 20086.0], [96.3, 20086.0], [96.4, 20086.0], [96.5, 20086.0], [96.6, 20086.0], [96.7, 20086.0], [96.8, 20086.0], [96.9, 20086.0], [97.0, 20086.0], [97.1, 20827.0], [97.2, 20827.0], [97.3, 20827.0], [97.4, 20827.0], [97.5, 20827.0], [97.6, 20827.0], [97.7, 20827.0], [97.8, 20827.0], [97.9, 20827.0], [98.0, 20827.0], [98.1, 21243.0], [98.2, 21243.0], [98.3, 21243.0], [98.4, 21243.0], [98.5, 21243.0], [98.6, 21243.0], [98.7, 21243.0], [98.8, 21243.0], [98.9, 21243.0], [99.0, 21243.0], [99.1, 23033.0], [99.2, 23033.0], [99.3, 23033.0], [99.4, 23033.0], [99.5, 23033.0], [99.6, 23033.0], [99.7, 23033.0], [99.8, 23033.0], [99.9, 23033.0]], "isOverall": false, "label": "-18", "isController": false}, {"data": [[0.0, 1237.0], [0.1, 1237.0], [0.2, 1237.0], [0.3, 1237.0], [0.4, 1237.0], [0.5, 1237.0], [0.6, 1237.0], [0.7, 1237.0], [0.8, 1237.0], [0.9, 1237.0], [1.0, 1237.0], [1.1, 1237.0], [1.2, 1237.0], [1.3, 1237.0], [1.4, 1329.0], [1.5, 1329.0], [1.6, 1329.0], [1.7, 1329.0], [1.8, 1329.0], [1.9, 1329.0], [2.0, 1329.0], [2.1, 1329.0], [2.2, 1329.0], [2.3, 1329.0], [2.4, 1329.0], [2.5, 1329.0], [2.6, 1329.0], [2.7, 1358.0], [2.8, 1358.0], [2.9, 1358.0], [3.0, 1358.0], [3.1, 1358.0], [3.2, 1358.0], [3.3, 1358.0], [3.4, 1358.0], [3.5, 1358.0], [3.6, 1358.0], [3.7, 1358.0], [3.8, 1358.0], [3.9, 1358.0], [4.0, 1368.0], [4.1, 1368.0], [4.2, 1368.0], [4.3, 1368.0], [4.4, 1368.0], [4.5, 1368.0], [4.6, 1368.0], [4.7, 1368.0], [4.8, 1368.0], [4.9, 1368.0], [5.0, 1368.0], [5.1, 1368.0], [5.2, 1368.0], [5.3, 1369.0], [5.4, 1369.0], [5.5, 1369.0], [5.6, 1369.0], [5.7, 1369.0], [5.8, 1369.0], [5.9, 1369.0], [6.0, 1369.0], [6.1, 1369.0], [6.2, 1369.0], [6.3, 1369.0], [6.4, 1369.0], [6.5, 1369.0], [6.6, 1380.0], [6.7, 1380.0], [6.8, 1380.0], [6.9, 1380.0], [7.0, 1380.0], [7.1, 1380.0], [7.2, 1380.0], [7.3, 1380.0], [7.4, 1380.0], [7.5, 1380.0], [7.6, 1380.0], [7.7, 1380.0], [7.8, 1380.0], [7.9, 1492.0], [8.0, 1492.0], [8.1, 1492.0], [8.2, 1492.0], [8.3, 1492.0], [8.4, 1492.0], [8.5, 1492.0], [8.6, 1492.0], [8.7, 1492.0], [8.8, 1492.0], [8.9, 1492.0], [9.0, 1492.0], [9.1, 1492.0], [9.2, 1492.0], [9.3, 1509.0], [9.4, 1509.0], [9.5, 1509.0], [9.6, 1509.0], [9.7, 1509.0], [9.8, 1509.0], [9.9, 1509.0], [10.0, 1509.0], [10.1, 1509.0], [10.2, 1509.0], [10.3, 1509.0], [10.4, 1509.0], [10.5, 1509.0], [10.6, 1516.0], [10.7, 1516.0], [10.8, 1516.0], [10.9, 1516.0], [11.0, 1516.0], [11.1, 1516.0], [11.2, 1516.0], [11.3, 1516.0], [11.4, 1516.0], [11.5, 1516.0], [11.6, 1516.0], [11.7, 1516.0], [11.8, 1516.0], [11.9, 1551.0], [12.0, 1551.0], [12.1, 1551.0], [12.2, 1551.0], [12.3, 1551.0], [12.4, 1551.0], [12.5, 1551.0], [12.6, 1551.0], [12.7, 1551.0], [12.8, 1551.0], [12.9, 1551.0], [13.0, 1551.0], [13.1, 1551.0], [13.2, 1628.0], [13.3, 1628.0], [13.4, 1628.0], [13.5, 1628.0], [13.6, 1628.0], [13.7, 1628.0], [13.8, 1628.0], [13.9, 1628.0], [14.0, 1628.0], [14.1, 1628.0], [14.2, 1628.0], [14.3, 1628.0], [14.4, 1628.0], [14.5, 1643.0], [14.6, 1643.0], [14.7, 1643.0], [14.8, 1643.0], [14.9, 1643.0], [15.0, 1643.0], [15.1, 1643.0], [15.2, 1643.0], [15.3, 1643.0], [15.4, 1643.0], [15.5, 1643.0], [15.6, 1643.0], [15.7, 1643.0], [15.8, 1681.0], [15.9, 1681.0], [16.0, 1681.0], [16.1, 1681.0], [16.2, 1681.0], [16.3, 1681.0], [16.4, 1681.0], [16.5, 1681.0], [16.6, 1681.0], [16.7, 1681.0], [16.8, 1681.0], [16.9, 1681.0], [17.0, 1681.0], [17.1, 1681.0], [17.2, 1689.0], [17.3, 1689.0], [17.4, 1689.0], [17.5, 1689.0], [17.6, 1689.0], [17.7, 1689.0], [17.8, 1689.0], [17.9, 1689.0], [18.0, 1689.0], [18.1, 1689.0], [18.2, 1689.0], [18.3, 1689.0], [18.4, 1689.0], [18.5, 1764.0], [18.6, 1764.0], [18.7, 1764.0], [18.8, 1764.0], [18.9, 1764.0], [19.0, 1764.0], [19.1, 1764.0], [19.2, 1764.0], [19.3, 1764.0], [19.4, 1764.0], [19.5, 1764.0], [19.6, 1764.0], [19.7, 1764.0], [19.8, 1824.0], [19.9, 1824.0], [20.0, 1824.0], [20.1, 1824.0], [20.2, 1824.0], [20.3, 1824.0], [20.4, 1824.0], [20.5, 1824.0], [20.6, 1824.0], [20.7, 1824.0], [20.8, 1824.0], [20.9, 1824.0], [21.0, 1824.0], [21.1, 1837.0], [21.2, 1837.0], [21.3, 1837.0], [21.4, 1837.0], [21.5, 1837.0], [21.6, 1837.0], [21.7, 1837.0], [21.8, 1837.0], [21.9, 1837.0], [22.0, 1837.0], [22.1, 1837.0], [22.2, 1837.0], [22.3, 1837.0], [22.4, 1847.0], [22.5, 1847.0], [22.6, 1847.0], [22.7, 1847.0], [22.8, 1847.0], [22.9, 1847.0], [23.0, 1847.0], [23.1, 1847.0], [23.2, 1847.0], [23.3, 1847.0], [23.4, 1847.0], [23.5, 1847.0], [23.6, 1847.0], [23.7, 1915.0], [23.8, 1915.0], [23.9, 1915.0], [24.0, 1915.0], [24.1, 1915.0], [24.2, 1915.0], [24.3, 1915.0], [24.4, 1915.0], [24.5, 1915.0], [24.6, 1915.0], [24.7, 1915.0], [24.8, 1915.0], [24.9, 1915.0], [25.0, 1915.0], [25.1, 1954.0], [25.2, 1954.0], [25.3, 1954.0], [25.4, 1954.0], [25.5, 1954.0], [25.6, 1954.0], [25.7, 1954.0], [25.8, 1954.0], [25.9, 1954.0], [26.0, 1954.0], [26.1, 1954.0], [26.2, 1954.0], [26.3, 1954.0], [26.4, 1960.0], [26.5, 1960.0], [26.6, 1960.0], [26.7, 1960.0], [26.8, 1960.0], [26.9, 1960.0], [27.0, 1960.0], [27.1, 1960.0], [27.2, 1960.0], [27.3, 1960.0], [27.4, 1960.0], [27.5, 1960.0], [27.6, 1960.0], [27.7, 1974.0], [27.8, 1974.0], [27.9, 1974.0], [28.0, 1974.0], [28.1, 1974.0], [28.2, 1974.0], [28.3, 1974.0], [28.4, 1974.0], [28.5, 1974.0], [28.6, 1974.0], [28.7, 1974.0], [28.8, 1974.0], [28.9, 1974.0], [29.0, 2007.0], [29.1, 2007.0], [29.2, 2007.0], [29.3, 2007.0], [29.4, 2007.0], [29.5, 2007.0], [29.6, 2007.0], [29.7, 2007.0], [29.8, 2007.0], [29.9, 2007.0], [30.0, 2007.0], [30.1, 2007.0], [30.2, 2007.0], [30.3, 2064.0], [30.4, 2064.0], [30.5, 2064.0], [30.6, 2064.0], [30.7, 2064.0], [30.8, 2064.0], [30.9, 2064.0], [31.0, 2064.0], [31.1, 2064.0], [31.2, 2064.0], [31.3, 2064.0], [31.4, 2064.0], [31.5, 2064.0], [31.6, 2131.0], [31.7, 2131.0], [31.8, 2131.0], [31.9, 2131.0], [32.0, 2131.0], [32.1, 2131.0], [32.2, 2131.0], [32.3, 2131.0], [32.4, 2131.0], [32.5, 2131.0], [32.6, 2131.0], [32.7, 2131.0], [32.8, 2131.0], [32.9, 2144.0], [33.0, 2144.0], [33.1, 2144.0], [33.2, 2144.0], [33.3, 2144.0], [33.4, 2144.0], [33.5, 2144.0], [33.6, 2144.0], [33.7, 2144.0], [33.8, 2144.0], [33.9, 2144.0], [34.0, 2144.0], [34.1, 2144.0], [34.2, 2144.0], [34.3, 2168.0], [34.4, 2168.0], [34.5, 2168.0], [34.6, 2168.0], [34.7, 2168.0], [34.8, 2168.0], [34.9, 2168.0], [35.0, 2168.0], [35.1, 2168.0], [35.2, 2168.0], [35.3, 2168.0], [35.4, 2168.0], [35.5, 2168.0], [35.6, 2341.0], [35.7, 2341.0], [35.8, 2341.0], [35.9, 2341.0], [36.0, 2341.0], [36.1, 2341.0], [36.2, 2341.0], [36.3, 2341.0], [36.4, 2341.0], [36.5, 2341.0], [36.6, 2341.0], [36.7, 2341.0], [36.8, 2341.0], [36.9, 2350.0], [37.0, 2350.0], [37.1, 2350.0], [37.2, 2350.0], [37.3, 2350.0], [37.4, 2350.0], [37.5, 2350.0], [37.6, 2350.0], [37.7, 2350.0], [37.8, 2350.0], [37.9, 2350.0], [38.0, 2350.0], [38.1, 2350.0], [38.2, 2477.0], [38.3, 2477.0], [38.4, 2477.0], [38.5, 2477.0], [38.6, 2477.0], [38.7, 2477.0], [38.8, 2477.0], [38.9, 2477.0], [39.0, 2477.0], [39.1, 2477.0], [39.2, 2477.0], [39.3, 2477.0], [39.4, 2477.0], [39.5, 2495.0], [39.6, 2495.0], [39.7, 2495.0], [39.8, 2495.0], [39.9, 2495.0], [40.0, 2495.0], [40.1, 2495.0], [40.2, 2495.0], [40.3, 2495.0], [40.4, 2495.0], [40.5, 2495.0], [40.6, 2495.0], [40.7, 2495.0], [40.8, 2606.0], [40.9, 2606.0], [41.0, 2606.0], [41.1, 2606.0], [41.2, 2606.0], [41.3, 2606.0], [41.4, 2606.0], [41.5, 2606.0], [41.6, 2606.0], [41.7, 2606.0], [41.8, 2606.0], [41.9, 2606.0], [42.0, 2606.0], [42.1, 2606.0], [42.2, 2822.0], [42.3, 2822.0], [42.4, 2822.0], [42.5, 2822.0], [42.6, 2822.0], [42.7, 2822.0], [42.8, 2822.0], [42.9, 2822.0], [43.0, 2822.0], [43.1, 2822.0], [43.2, 2822.0], [43.3, 2822.0], [43.4, 2822.0], [43.5, 2867.0], [43.6, 2867.0], [43.7, 2867.0], [43.8, 2867.0], [43.9, 2867.0], [44.0, 2867.0], [44.1, 2867.0], [44.2, 2867.0], [44.3, 2867.0], [44.4, 2867.0], [44.5, 2867.0], [44.6, 2867.0], [44.7, 2867.0], [44.8, 2871.0], [44.9, 2871.0], [45.0, 2871.0], [45.1, 2871.0], [45.2, 2871.0], [45.3, 2871.0], [45.4, 2871.0], [45.5, 2871.0], [45.6, 2871.0], [45.7, 2871.0], [45.8, 2871.0], [45.9, 2871.0], [46.0, 2871.0], [46.1, 2886.0], [46.2, 2886.0], [46.3, 2886.0], [46.4, 2886.0], [46.5, 2886.0], [46.6, 2886.0], [46.7, 2886.0], [46.8, 2886.0], [46.9, 2886.0], [47.0, 2886.0], [47.1, 2886.0], [47.2, 2886.0], [47.3, 2886.0], [47.4, 3093.0], [47.5, 3093.0], [47.6, 3093.0], [47.7, 3093.0], [47.8, 3093.0], [47.9, 3093.0], [48.0, 3093.0], [48.1, 3093.0], [48.2, 3093.0], [48.3, 3093.0], [48.4, 3093.0], [48.5, 3093.0], [48.6, 3093.0], [48.7, 3106.0], [48.8, 3106.0], [48.9, 3106.0], [49.0, 3106.0], [49.1, 3106.0], [49.2, 3106.0], [49.3, 3106.0], [49.4, 3106.0], [49.5, 3106.0], [49.6, 3106.0], [49.7, 3106.0], [49.8, 3106.0], [49.9, 3106.0], [50.0, 3106.0], [50.1, 3197.0], [50.2, 3197.0], [50.3, 3197.0], [50.4, 3197.0], [50.5, 3197.0], [50.6, 3197.0], [50.7, 3197.0], [50.8, 3197.0], [50.9, 3197.0], [51.0, 3197.0], [51.1, 3197.0], [51.2, 3197.0], [51.3, 3197.0], [51.4, 3334.0], [51.5, 3334.0], [51.6, 3334.0], [51.7, 3334.0], [51.8, 3334.0], [51.9, 3334.0], [52.0, 3334.0], [52.1, 3334.0], [52.2, 3334.0], [52.3, 3334.0], [52.4, 3334.0], [52.5, 3334.0], [52.6, 3334.0], [52.7, 3998.0], [52.8, 3998.0], [52.9, 3998.0], [53.0, 3998.0], [53.1, 3998.0], [53.2, 3998.0], [53.3, 3998.0], [53.4, 3998.0], [53.5, 3998.0], [53.6, 3998.0], [53.7, 3998.0], [53.8, 3998.0], [53.9, 3998.0], [54.0, 4326.0], [54.1, 4326.0], [54.2, 4326.0], [54.3, 4326.0], [54.4, 4326.0], [54.5, 4326.0], [54.6, 4326.0], [54.7, 4326.0], [54.8, 4326.0], [54.9, 4326.0], [55.0, 4326.0], [55.1, 4326.0], [55.2, 4326.0], [55.3, 4530.0], [55.4, 4530.0], [55.5, 4530.0], [55.6, 4530.0], [55.7, 4530.0], [55.8, 4530.0], [55.9, 4530.0], [56.0, 4530.0], [56.1, 4530.0], [56.2, 4530.0], [56.3, 4530.0], [56.4, 4530.0], [56.5, 4530.0], [56.6, 4727.0], [56.7, 4727.0], [56.8, 4727.0], [56.9, 4727.0], [57.0, 4727.0], [57.1, 4727.0], [57.2, 4727.0], [57.3, 4727.0], [57.4, 4727.0], [57.5, 4727.0], [57.6, 4727.0], [57.7, 4727.0], [57.8, 4727.0], [57.9, 4927.0], [58.0, 4927.0], [58.1, 4927.0], [58.2, 4927.0], [58.3, 4927.0], [58.4, 4927.0], [58.5, 4927.0], [58.6, 4927.0], [58.7, 4927.0], [58.8, 4927.0], [58.9, 4927.0], [59.0, 4927.0], [59.1, 4927.0], [59.2, 4927.0], [59.3, 5561.0], [59.4, 5561.0], [59.5, 5561.0], [59.6, 5561.0], [59.7, 5561.0], [59.8, 5561.0], [59.9, 5561.0], [60.0, 5561.0], [60.1, 5561.0], [60.2, 5561.0], [60.3, 5561.0], [60.4, 5561.0], [60.5, 5561.0], [60.6, 5868.0], [60.7, 5868.0], [60.8, 5868.0], [60.9, 5868.0], [61.0, 5868.0], [61.1, 5868.0], [61.2, 5868.0], [61.3, 5868.0], [61.4, 5868.0], [61.5, 5868.0], [61.6, 5868.0], [61.7, 5868.0], [61.8, 5868.0], [61.9, 6015.0], [62.0, 6015.0], [62.1, 6015.0], [62.2, 6015.0], [62.3, 6015.0], [62.4, 6015.0], [62.5, 6015.0], [62.6, 6015.0], [62.7, 6015.0], [62.8, 6015.0], [62.9, 6015.0], [63.0, 6015.0], [63.1, 6015.0], [63.2, 6081.0], [63.3, 6081.0], [63.4, 6081.0], [63.5, 6081.0], [63.6, 6081.0], [63.7, 6081.0], [63.8, 6081.0], [63.9, 6081.0], [64.0, 6081.0], [64.1, 6081.0], [64.2, 6081.0], [64.3, 6081.0], [64.4, 6081.0], [64.5, 6250.0], [64.6, 6250.0], [64.7, 6250.0], [64.8, 6250.0], [64.9, 6250.0], [65.0, 6250.0], [65.1, 6250.0], [65.2, 6250.0], [65.3, 6250.0], [65.4, 6250.0], [65.5, 6250.0], [65.6, 6250.0], [65.7, 6250.0], [65.8, 6854.0], [65.9, 6854.0], [66.0, 6854.0], [66.1, 6854.0], [66.2, 6854.0], [66.3, 6854.0], [66.4, 6854.0], [66.5, 6854.0], [66.6, 6854.0], [66.7, 6854.0], [66.8, 6854.0], [66.9, 6854.0], [67.0, 6854.0], [67.1, 6854.0], [67.2, 7507.0], [67.3, 7507.0], [67.4, 7507.0], [67.5, 7507.0], [67.6, 7507.0], [67.7, 7507.0], [67.8, 7507.0], [67.9, 7507.0], [68.0, 7507.0], [68.1, 7507.0], [68.2, 7507.0], [68.3, 7507.0], [68.4, 7507.0], [68.5, 7906.0], [68.6, 7906.0], [68.7, 7906.0], [68.8, 7906.0], [68.9, 7906.0], [69.0, 7906.0], [69.1, 7906.0], [69.2, 7906.0], [69.3, 7906.0], [69.4, 7906.0], [69.5, 7906.0], [69.6, 7906.0], [69.7, 7906.0], [69.8, 8208.0], [69.9, 8208.0], [70.0, 8208.0], [70.1, 8208.0], [70.2, 8208.0], [70.3, 8208.0], [70.4, 8208.0], [70.5, 8208.0], [70.6, 8208.0], [70.7, 8208.0], [70.8, 8208.0], [70.9, 8208.0], [71.0, 8208.0], [71.1, 8249.0], [71.2, 8249.0], [71.3, 8249.0], [71.4, 8249.0], [71.5, 8249.0], [71.6, 8249.0], [71.7, 8249.0], [71.8, 8249.0], [71.9, 8249.0], [72.0, 8249.0], [72.1, 8249.0], [72.2, 8249.0], [72.3, 8249.0], [72.4, 8705.0], [72.5, 8705.0], [72.6, 8705.0], [72.7, 8705.0], [72.8, 8705.0], [72.9, 8705.0], [73.0, 8705.0], [73.1, 8705.0], [73.2, 8705.0], [73.3, 8705.0], [73.4, 8705.0], [73.5, 8705.0], [73.6, 8705.0], [73.7, 8941.0], [73.8, 8941.0], [73.9, 8941.0], [74.0, 8941.0], [74.1, 8941.0], [74.2, 8941.0], [74.3, 8941.0], [74.4, 8941.0], [74.5, 8941.0], [74.6, 8941.0], [74.7, 8941.0], [74.8, 8941.0], [74.9, 8941.0], [75.0, 8941.0], [75.1, 9193.0], [75.2, 9193.0], [75.3, 9193.0], [75.4, 9193.0], [75.5, 9193.0], [75.6, 9193.0], [75.7, 9193.0], [75.8, 9193.0], [75.9, 9193.0], [76.0, 9193.0], [76.1, 9193.0], [76.2, 9193.0], [76.3, 9193.0], [76.4, 9781.0], [76.5, 9781.0], [76.6, 9781.0], [76.7, 9781.0], [76.8, 9781.0], [76.9, 9781.0], [77.0, 9781.0], [77.1, 9781.0], [77.2, 9781.0], [77.3, 9781.0], [77.4, 9781.0], [77.5, 9781.0], [77.6, 9781.0], [77.7, 11022.0], [77.8, 11022.0], [77.9, 11022.0], [78.0, 11022.0], [78.1, 11022.0], [78.2, 11022.0], [78.3, 11022.0], [78.4, 11022.0], [78.5, 11022.0], [78.6, 11022.0], [78.7, 11022.0], [78.8, 11022.0], [78.9, 11022.0], [79.0, 11142.0], [79.1, 11142.0], [79.2, 11142.0], [79.3, 11142.0], [79.4, 11142.0], [79.5, 11142.0], [79.6, 11142.0], [79.7, 11142.0], [79.8, 11142.0], [79.9, 11142.0], [80.0, 11142.0], [80.1, 11142.0], [80.2, 11142.0], [80.3, 11586.0], [80.4, 11586.0], [80.5, 11586.0], [80.6, 11586.0], [80.7, 11586.0], [80.8, 11586.0], [80.9, 11586.0], [81.0, 11586.0], [81.1, 11586.0], [81.2, 11586.0], [81.3, 11586.0], [81.4, 11586.0], [81.5, 11586.0], [81.6, 11851.0], [81.7, 11851.0], [81.8, 11851.0], [81.9, 11851.0], [82.0, 11851.0], [82.1, 11851.0], [82.2, 11851.0], [82.3, 11851.0], [82.4, 11851.0], [82.5, 11851.0], [82.6, 11851.0], [82.7, 11851.0], [82.8, 11851.0], [82.9, 12506.0], [83.0, 12506.0], [83.1, 12506.0], [83.2, 12506.0], [83.3, 12506.0], [83.4, 12506.0], [83.5, 12506.0], [83.6, 12506.0], [83.7, 12506.0], [83.8, 12506.0], [83.9, 12506.0], [84.0, 12506.0], [84.1, 12506.0], [84.2, 12506.0], [84.3, 12872.0], [84.4, 12872.0], [84.5, 12872.0], [84.6, 12872.0], [84.7, 12872.0], [84.8, 12872.0], [84.9, 12872.0], [85.0, 12872.0], [85.1, 12872.0], [85.2, 12872.0], [85.3, 12872.0], [85.4, 12872.0], [85.5, 12872.0], [85.6, 13256.0], [85.7, 13256.0], [85.8, 13256.0], [85.9, 13256.0], [86.0, 13256.0], [86.1, 13256.0], [86.2, 13256.0], [86.3, 13256.0], [86.4, 13256.0], [86.5, 13256.0], [86.6, 13256.0], [86.7, 13256.0], [86.8, 13256.0], [86.9, 13450.0], [87.0, 13450.0], [87.1, 13450.0], [87.2, 13450.0], [87.3, 13450.0], [87.4, 13450.0], [87.5, 13450.0], [87.6, 13450.0], [87.7, 13450.0], [87.8, 13450.0], [87.9, 13450.0], [88.0, 13450.0], [88.1, 13450.0], [88.2, 14650.0], [88.3, 14650.0], [88.4, 14650.0], [88.5, 14650.0], [88.6, 14650.0], [88.7, 14650.0], [88.8, 14650.0], [88.9, 14650.0], [89.0, 14650.0], [89.1, 14650.0], [89.2, 14650.0], [89.3, 14650.0], [89.4, 14650.0], [89.5, 15208.0], [89.6, 15208.0], [89.7, 15208.0], [89.8, 15208.0], [89.9, 15208.0], [90.0, 15208.0], [90.1, 15208.0], [90.2, 15208.0], [90.3, 15208.0], [90.4, 15208.0], [90.5, 15208.0], [90.6, 15208.0], [90.7, 15208.0], [90.8, 15411.0], [90.9, 15411.0], [91.0, 15411.0], [91.1, 15411.0], [91.2, 15411.0], [91.3, 15411.0], [91.4, 15411.0], [91.5, 15411.0], [91.6, 15411.0], [91.7, 15411.0], [91.8, 15411.0], [91.9, 15411.0], [92.0, 15411.0], [92.1, 15411.0], [92.2, 17165.0], [92.3, 17165.0], [92.4, 17165.0], [92.5, 17165.0], [92.6, 17165.0], [92.7, 17165.0], [92.8, 17165.0], [92.9, 17165.0], [93.0, 17165.0], [93.1, 17165.0], [93.2, 17165.0], [93.3, 17165.0], [93.4, 17165.0], [93.5, 17965.0], [93.6, 17965.0], [93.7, 17965.0], [93.8, 17965.0], [93.9, 17965.0], [94.0, 17965.0], [94.1, 17965.0], [94.2, 17965.0], [94.3, 17965.0], [94.4, 17965.0], [94.5, 17965.0], [94.6, 17965.0], [94.7, 17965.0], [94.8, 20085.0], [94.9, 20085.0], [95.0, 20085.0], [95.1, 20085.0], [95.2, 20085.0], [95.3, 20085.0], [95.4, 20085.0], [95.5, 20085.0], [95.6, 20085.0], [95.7, 20085.0], [95.8, 20085.0], [95.9, 20085.0], [96.0, 20085.0], [96.1, 21749.0], [96.2, 21749.0], [96.3, 21749.0], [96.4, 21749.0], [96.5, 21749.0], [96.6, 21749.0], [96.7, 21749.0], [96.8, 21749.0], [96.9, 21749.0], [97.0, 21749.0], [97.1, 21749.0], [97.2, 21749.0], [97.3, 21749.0], [97.4, 22272.0], [97.5, 22272.0], [97.6, 22272.0], [97.7, 22272.0], [97.8, 22272.0], [97.9, 22272.0], [98.0, 22272.0], [98.1, 22272.0], [98.2, 22272.0], [98.3, 22272.0], [98.4, 22272.0], [98.5, 22272.0], [98.6, 22272.0], [98.7, 23824.0], [98.8, 23824.0], [98.9, 23824.0], [99.0, 23824.0], [99.1, 23824.0], [99.2, 23824.0], [99.3, 23824.0], [99.4, 23824.0], [99.5, 23824.0], [99.6, 23824.0], [99.7, 23824.0], [99.8, 23824.0], [99.9, 23824.0]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": true}, {"data": [[0.0, 238.0], [0.1, 238.0], [0.2, 238.0], [0.3, 238.0], [0.4, 238.0], [0.5, 238.0], [0.6, 238.0], [0.7, 238.0], [0.8, 238.0], [0.9, 238.0], [1.0, 238.0], [1.1, 238.0], [1.2, 238.0], [1.3, 238.0], [1.4, 238.0], [1.5, 238.0], [1.6, 238.0], [1.7, 238.0], [1.8, 238.0], [1.9, 238.0], [2.0, 238.0], [2.1, 238.0], [2.2, 238.0], [2.3, 238.0], [2.4, 238.0], [2.5, 238.0], [2.6, 238.0], [2.7, 244.0], [2.8, 244.0], [2.9, 244.0], [3.0, 244.0], [3.1, 244.0], [3.2, 244.0], [3.3, 244.0], [3.4, 244.0], [3.5, 244.0], [3.6, 244.0], [3.7, 244.0], [3.8, 244.0], [3.9, 244.0], [4.0, 245.0], [4.1, 245.0], [4.2, 245.0], [4.3, 245.0], [4.4, 245.0], [4.5, 245.0], [4.6, 245.0], [4.7, 245.0], [4.8, 245.0], [4.9, 245.0], [5.0, 245.0], [5.1, 245.0], [5.2, 245.0], [5.3, 247.0], [5.4, 247.0], [5.5, 247.0], [5.6, 247.0], [5.7, 247.0], [5.8, 247.0], [5.9, 247.0], [6.0, 247.0], [6.1, 247.0], [6.2, 247.0], [6.3, 247.0], [6.4, 247.0], [6.5, 247.0], [6.6, 248.0], [6.7, 248.0], [6.8, 248.0], [6.9, 248.0], [7.0, 248.0], [7.1, 248.0], [7.2, 248.0], [7.3, 248.0], [7.4, 248.0], [7.5, 248.0], [7.6, 248.0], [7.7, 248.0], [7.8, 248.0], [7.9, 256.0], [8.0, 256.0], [8.1, 256.0], [8.2, 256.0], [8.3, 256.0], [8.4, 256.0], [8.5, 256.0], [8.6, 256.0], [8.7, 256.0], [8.8, 256.0], [8.9, 256.0], [9.0, 256.0], [9.1, 256.0], [9.2, 256.0], [9.3, 276.0], [9.4, 276.0], [9.5, 276.0], [9.6, 276.0], [9.7, 276.0], [9.8, 276.0], [9.9, 276.0], [10.0, 276.0], [10.1, 276.0], [10.2, 276.0], [10.3, 276.0], [10.4, 276.0], [10.5, 276.0], [10.6, 280.0], [10.7, 280.0], [10.8, 280.0], [10.9, 280.0], [11.0, 280.0], [11.1, 280.0], [11.2, 280.0], [11.3, 280.0], [11.4, 280.0], [11.5, 280.0], [11.6, 280.0], [11.7, 280.0], [11.8, 280.0], [11.9, 289.0], [12.0, 289.0], [12.1, 289.0], [12.2, 289.0], [12.3, 289.0], [12.4, 289.0], [12.5, 289.0], [12.6, 289.0], [12.7, 289.0], [12.8, 289.0], [12.9, 289.0], [13.0, 289.0], [13.1, 289.0], [13.2, 295.0], [13.3, 295.0], [13.4, 295.0], [13.5, 295.0], [13.6, 295.0], [13.7, 295.0], [13.8, 295.0], [13.9, 295.0], [14.0, 295.0], [14.1, 295.0], [14.2, 295.0], [14.3, 295.0], [14.4, 295.0], [14.5, 297.0], [14.6, 297.0], [14.7, 297.0], [14.8, 297.0], [14.9, 297.0], [15.0, 297.0], [15.1, 297.0], [15.2, 297.0], [15.3, 297.0], [15.4, 297.0], [15.5, 297.0], [15.6, 297.0], [15.7, 297.0], [15.8, 300.0], [15.9, 300.0], [16.0, 300.0], [16.1, 300.0], [16.2, 300.0], [16.3, 300.0], [16.4, 300.0], [16.5, 300.0], [16.6, 300.0], [16.7, 300.0], [16.8, 300.0], [16.9, 300.0], [17.0, 300.0], [17.1, 300.0], [17.2, 310.0], [17.3, 310.0], [17.4, 310.0], [17.5, 310.0], [17.6, 310.0], [17.7, 310.0], [17.8, 310.0], [17.9, 310.0], [18.0, 310.0], [18.1, 310.0], [18.2, 310.0], [18.3, 310.0], [18.4, 310.0], [18.5, 310.0], [18.6, 310.0], [18.7, 310.0], [18.8, 310.0], [18.9, 310.0], [19.0, 310.0], [19.1, 310.0], [19.2, 310.0], [19.3, 310.0], [19.4, 310.0], [19.5, 310.0], [19.6, 310.0], [19.7, 310.0], [19.8, 312.0], [19.9, 312.0], [20.0, 312.0], [20.1, 312.0], [20.2, 312.0], [20.3, 312.0], [20.4, 312.0], [20.5, 312.0], [20.6, 312.0], [20.7, 312.0], [20.8, 312.0], [20.9, 312.0], [21.0, 312.0], [21.1, 316.0], [21.2, 316.0], [21.3, 316.0], [21.4, 316.0], [21.5, 316.0], [21.6, 316.0], [21.7, 316.0], [21.8, 316.0], [21.9, 316.0], [22.0, 316.0], [22.1, 316.0], [22.2, 316.0], [22.3, 316.0], [22.4, 328.0], [22.5, 328.0], [22.6, 328.0], [22.7, 328.0], [22.8, 328.0], [22.9, 328.0], [23.0, 328.0], [23.1, 328.0], [23.2, 328.0], [23.3, 328.0], [23.4, 328.0], [23.5, 328.0], [23.6, 328.0], [23.7, 331.0], [23.8, 331.0], [23.9, 331.0], [24.0, 331.0], [24.1, 331.0], [24.2, 331.0], [24.3, 331.0], [24.4, 331.0], [24.5, 331.0], [24.6, 331.0], [24.7, 331.0], [24.8, 331.0], [24.9, 331.0], [25.0, 331.0], [25.1, 334.0], [25.2, 334.0], [25.3, 334.0], [25.4, 334.0], [25.5, 334.0], [25.6, 334.0], [25.7, 334.0], [25.8, 334.0], [25.9, 334.0], [26.0, 334.0], [26.1, 334.0], [26.2, 334.0], [26.3, 334.0], [26.4, 336.0], [26.5, 336.0], [26.6, 336.0], [26.7, 336.0], [26.8, 336.0], [26.9, 336.0], [27.0, 336.0], [27.1, 336.0], [27.2, 336.0], [27.3, 336.0], [27.4, 336.0], [27.5, 336.0], [27.6, 336.0], [27.7, 338.0], [27.8, 338.0], [27.9, 338.0], [28.0, 338.0], [28.1, 338.0], [28.2, 338.0], [28.3, 338.0], [28.4, 338.0], [28.5, 338.0], [28.6, 338.0], [28.7, 338.0], [28.8, 338.0], [28.9, 338.0], [29.0, 339.0], [29.1, 339.0], [29.2, 339.0], [29.3, 339.0], [29.4, 339.0], [29.5, 339.0], [29.6, 339.0], [29.7, 339.0], [29.8, 339.0], [29.9, 339.0], [30.0, 339.0], [30.1, 339.0], [30.2, 339.0], [30.3, 341.0], [30.4, 341.0], [30.5, 341.0], [30.6, 341.0], [30.7, 341.0], [30.8, 341.0], [30.9, 341.0], [31.0, 341.0], [31.1, 341.0], [31.2, 341.0], [31.3, 341.0], [31.4, 341.0], [31.5, 341.0], [31.6, 341.0], [31.7, 341.0], [31.8, 341.0], [31.9, 341.0], [32.0, 341.0], [32.1, 341.0], [32.2, 341.0], [32.3, 341.0], [32.4, 341.0], [32.5, 341.0], [32.6, 341.0], [32.7, 341.0], [32.8, 341.0], [32.9, 345.0], [33.0, 345.0], [33.1, 345.0], [33.2, 345.0], [33.3, 345.0], [33.4, 345.0], [33.5, 345.0], [33.6, 345.0], [33.7, 345.0], [33.8, 345.0], [33.9, 345.0], [34.0, 345.0], [34.1, 345.0], [34.2, 345.0], [34.3, 347.0], [34.4, 347.0], [34.5, 347.0], [34.6, 347.0], [34.7, 347.0], [34.8, 347.0], [34.9, 347.0], [35.0, 347.0], [35.1, 347.0], [35.2, 347.0], [35.3, 347.0], [35.4, 347.0], [35.5, 347.0], [35.6, 347.0], [35.7, 347.0], [35.8, 347.0], [35.9, 347.0], [36.0, 347.0], [36.1, 347.0], [36.2, 347.0], [36.3, 347.0], [36.4, 347.0], [36.5, 347.0], [36.6, 347.0], [36.7, 347.0], [36.8, 347.0], [36.9, 350.0], [37.0, 350.0], [37.1, 350.0], [37.2, 350.0], [37.3, 350.0], [37.4, 350.0], [37.5, 350.0], [37.6, 350.0], [37.7, 350.0], [37.8, 350.0], [37.9, 350.0], [38.0, 350.0], [38.1, 350.0], [38.2, 368.0], [38.3, 368.0], [38.4, 368.0], [38.5, 368.0], [38.6, 368.0], [38.7, 368.0], [38.8, 368.0], [38.9, 368.0], [39.0, 368.0], [39.1, 368.0], [39.2, 368.0], [39.3, 368.0], [39.4, 368.0], [39.5, 372.0], [39.6, 372.0], [39.7, 372.0], [39.8, 372.0], [39.9, 372.0], [40.0, 372.0], [40.1, 372.0], [40.2, 372.0], [40.3, 372.0], [40.4, 372.0], [40.5, 372.0], [40.6, 372.0], [40.7, 372.0], [40.8, 385.0], [40.9, 385.0], [41.0, 385.0], [41.1, 385.0], [41.2, 385.0], [41.3, 385.0], [41.4, 385.0], [41.5, 385.0], [41.6, 385.0], [41.7, 385.0], [41.8, 385.0], [41.9, 385.0], [42.0, 385.0], [42.1, 385.0], [42.2, 402.0], [42.3, 402.0], [42.4, 402.0], [42.5, 402.0], [42.6, 402.0], [42.7, 402.0], [42.8, 402.0], [42.9, 402.0], [43.0, 402.0], [43.1, 402.0], [43.2, 402.0], [43.3, 402.0], [43.4, 402.0], [43.5, 408.0], [43.6, 408.0], [43.7, 408.0], [43.8, 408.0], [43.9, 408.0], [44.0, 408.0], [44.1, 408.0], [44.2, 408.0], [44.3, 408.0], [44.4, 408.0], [44.5, 408.0], [44.6, 408.0], [44.7, 408.0], [44.8, 420.0], [44.9, 420.0], [45.0, 420.0], [45.1, 420.0], [45.2, 420.0], [45.3, 420.0], [45.4, 420.0], [45.5, 420.0], [45.6, 420.0], [45.7, 420.0], [45.8, 420.0], [45.9, 420.0], [46.0, 420.0], [46.1, 435.0], [46.2, 435.0], [46.3, 435.0], [46.4, 435.0], [46.5, 435.0], [46.6, 435.0], [46.7, 435.0], [46.8, 435.0], [46.9, 435.0], [47.0, 435.0], [47.1, 435.0], [47.2, 435.0], [47.3, 435.0], [47.4, 440.0], [47.5, 440.0], [47.6, 440.0], [47.7, 440.0], [47.8, 440.0], [47.9, 440.0], [48.0, 440.0], [48.1, 440.0], [48.2, 440.0], [48.3, 440.0], [48.4, 440.0], [48.5, 440.0], [48.6, 440.0], [48.7, 442.0], [48.8, 442.0], [48.9, 442.0], [49.0, 442.0], [49.1, 442.0], [49.2, 442.0], [49.3, 442.0], [49.4, 442.0], [49.5, 442.0], [49.6, 442.0], [49.7, 442.0], [49.8, 442.0], [49.9, 442.0], [50.0, 442.0], [50.1, 447.0], [50.2, 447.0], [50.3, 447.0], [50.4, 447.0], [50.5, 447.0], [50.6, 447.0], [50.7, 447.0], [50.8, 447.0], [50.9, 447.0], [51.0, 447.0], [51.1, 447.0], [51.2, 447.0], [51.3, 447.0], [51.4, 464.0], [51.5, 464.0], [51.6, 464.0], [51.7, 464.0], [51.8, 464.0], [51.9, 464.0], [52.0, 464.0], [52.1, 464.0], [52.2, 464.0], [52.3, 464.0], [52.4, 464.0], [52.5, 464.0], [52.6, 464.0], [52.7, 476.0], [52.8, 476.0], [52.9, 476.0], [53.0, 476.0], [53.1, 476.0], [53.2, 476.0], [53.3, 476.0], [53.4, 476.0], [53.5, 476.0], [53.6, 476.0], [53.7, 476.0], [53.8, 476.0], [53.9, 476.0], [54.0, 495.0], [54.1, 495.0], [54.2, 495.0], [54.3, 495.0], [54.4, 495.0], [54.5, 495.0], [54.6, 495.0], [54.7, 495.0], [54.8, 495.0], [54.9, 495.0], [55.0, 495.0], [55.1, 495.0], [55.2, 495.0], [55.3, 502.0], [55.4, 502.0], [55.5, 502.0], [55.6, 502.0], [55.7, 502.0], [55.8, 502.0], [55.9, 502.0], [56.0, 502.0], [56.1, 502.0], [56.2, 502.0], [56.3, 502.0], [56.4, 502.0], [56.5, 502.0], [56.6, 545.0], [56.7, 545.0], [56.8, 545.0], [56.9, 545.0], [57.0, 545.0], [57.1, 545.0], [57.2, 545.0], [57.3, 545.0], [57.4, 545.0], [57.5, 545.0], [57.6, 545.0], [57.7, 545.0], [57.8, 545.0], [57.9, 586.0], [58.0, 586.0], [58.1, 586.0], [58.2, 586.0], [58.3, 586.0], [58.4, 586.0], [58.5, 586.0], [58.6, 586.0], [58.7, 586.0], [58.8, 586.0], [58.9, 586.0], [59.0, 586.0], [59.1, 586.0], [59.2, 586.0], [59.3, 622.0], [59.4, 622.0], [59.5, 622.0], [59.6, 622.0], [59.7, 622.0], [59.8, 622.0], [59.9, 622.0], [60.0, 622.0], [60.1, 622.0], [60.2, 622.0], [60.3, 622.0], [60.4, 622.0], [60.5, 622.0], [60.6, 717.0], [60.7, 717.0], [60.8, 717.0], [60.9, 717.0], [61.0, 717.0], [61.1, 717.0], [61.2, 717.0], [61.3, 717.0], [61.4, 717.0], [61.5, 717.0], [61.6, 717.0], [61.7, 717.0], [61.8, 717.0], [61.9, 744.0], [62.0, 744.0], [62.1, 744.0], [62.2, 744.0], [62.3, 744.0], [62.4, 744.0], [62.5, 744.0], [62.6, 744.0], [62.7, 744.0], [62.8, 744.0], [62.9, 744.0], [63.0, 744.0], [63.1, 744.0], [63.2, 815.0], [63.3, 815.0], [63.4, 815.0], [63.5, 815.0], [63.6, 815.0], [63.7, 815.0], [63.8, 815.0], [63.9, 815.0], [64.0, 815.0], [64.1, 815.0], [64.2, 815.0], [64.3, 815.0], [64.4, 815.0], [64.5, 862.0], [64.6, 862.0], [64.7, 862.0], [64.8, 862.0], [64.9, 862.0], [65.0, 862.0], [65.1, 862.0], [65.2, 862.0], [65.3, 862.0], [65.4, 862.0], [65.5, 862.0], [65.6, 862.0], [65.7, 862.0], [65.8, 881.0], [65.9, 881.0], [66.0, 881.0], [66.1, 881.0], [66.2, 881.0], [66.3, 881.0], [66.4, 881.0], [66.5, 881.0], [66.6, 881.0], [66.7, 881.0], [66.8, 881.0], [66.9, 881.0], [67.0, 881.0], [67.1, 881.0], [67.2, 916.0], [67.3, 916.0], [67.4, 916.0], [67.5, 916.0], [67.6, 916.0], [67.7, 916.0], [67.8, 916.0], [67.9, 916.0], [68.0, 916.0], [68.1, 916.0], [68.2, 916.0], [68.3, 916.0], [68.4, 916.0], [68.5, 1063.0], [68.6, 1063.0], [68.7, 1063.0], [68.8, 1063.0], [68.9, 1063.0], [69.0, 1063.0], [69.1, 1063.0], [69.2, 1063.0], [69.3, 1063.0], [69.4, 1063.0], [69.5, 1063.0], [69.6, 1063.0], [69.7, 1063.0], [69.8, 1089.0], [69.9, 1089.0], [70.0, 1089.0], [70.1, 1089.0], [70.2, 1089.0], [70.3, 1089.0], [70.4, 1089.0], [70.5, 1089.0], [70.6, 1089.0], [70.7, 1089.0], [70.8, 1089.0], [70.9, 1089.0], [71.0, 1089.0], [71.1, 1104.0], [71.2, 1104.0], [71.3, 1104.0], [71.4, 1104.0], [71.5, 1104.0], [71.6, 1104.0], [71.7, 1104.0], [71.8, 1104.0], [71.9, 1104.0], [72.0, 1104.0], [72.1, 1104.0], [72.2, 1104.0], [72.3, 1104.0], [72.4, 1628.0], [72.5, 1628.0], [72.6, 1628.0], [72.7, 1628.0], [72.8, 1628.0], [72.9, 1628.0], [73.0, 1628.0], [73.1, 1628.0], [73.2, 1628.0], [73.3, 1628.0], [73.4, 1628.0], [73.5, 1628.0], [73.6, 1628.0], [73.7, 1677.0], [73.8, 1677.0], [73.9, 1677.0], [74.0, 1677.0], [74.1, 1677.0], [74.2, 1677.0], [74.3, 1677.0], [74.4, 1677.0], [74.5, 1677.0], [74.6, 1677.0], [74.7, 1677.0], [74.8, 1677.0], [74.9, 1677.0], [75.0, 1857.0], [75.1, 1857.0], [75.2, 1857.0], [75.3, 1857.0], [75.4, 1857.0], [75.5, 1857.0], [75.6, 1857.0], [75.7, 1857.0], [75.8, 1857.0], [75.9, 1857.0], [76.0, 1857.0], [76.1, 1857.0], [76.2, 1857.0], [76.3, 1857.0], [76.4, 2147.0], [76.5, 2147.0], [76.6, 2147.0], [76.7, 2147.0], [76.8, 2147.0], [76.9, 2147.0], [77.0, 2147.0], [77.1, 2147.0], [77.2, 2147.0], [77.3, 2147.0], [77.4, 2147.0], [77.5, 2147.0], [77.6, 2147.0], [77.7, 2191.0], [77.8, 2191.0], [77.9, 2191.0], [78.0, 2191.0], [78.1, 2191.0], [78.2, 2191.0], [78.3, 2191.0], [78.4, 2191.0], [78.5, 2191.0], [78.6, 2191.0], [78.7, 2191.0], [78.8, 2191.0], [78.9, 2191.0], [79.0, 2928.0], [79.1, 2928.0], [79.2, 2928.0], [79.3, 2928.0], [79.4, 2928.0], [79.5, 2928.0], [79.6, 2928.0], [79.7, 2928.0], [79.8, 2928.0], [79.9, 2928.0], [80.0, 2928.0], [80.1, 2928.0], [80.2, 2928.0], [80.3, 3005.0], [80.4, 3005.0], [80.5, 3005.0], [80.6, 3005.0], [80.7, 3005.0], [80.8, 3005.0], [80.9, 3005.0], [81.0, 3005.0], [81.1, 3005.0], [81.2, 3005.0], [81.3, 3005.0], [81.4, 3005.0], [81.5, 3005.0], [81.6, 3539.0], [81.7, 3539.0], [81.8, 3539.0], [81.9, 3539.0], [82.0, 3539.0], [82.1, 3539.0], [82.2, 3539.0], [82.3, 3539.0], [82.4, 3539.0], [82.5, 3539.0], [82.6, 3539.0], [82.7, 3539.0], [82.8, 3539.0], [82.9, 4466.0], [83.0, 4466.0], [83.1, 4466.0], [83.2, 4466.0], [83.3, 4466.0], [83.4, 4466.0], [83.5, 4466.0], [83.6, 4466.0], [83.7, 4466.0], [83.8, 4466.0], [83.9, 4466.0], [84.0, 4466.0], [84.1, 4466.0], [84.2, 4466.0], [84.3, 7070.0], [84.4, 7070.0], [84.5, 7070.0], [84.6, 7070.0], [84.7, 7070.0], [84.8, 7070.0], [84.9, 7070.0], [85.0, 7070.0], [85.1, 7070.0], [85.2, 7070.0], [85.3, 7070.0], [85.4, 7070.0], [85.5, 7070.0], [85.6, 7239.0], [85.7, 7239.0], [85.8, 7239.0], [85.9, 7239.0], [86.0, 7239.0], [86.1, 7239.0], [86.2, 7239.0], [86.3, 7239.0], [86.4, 7239.0], [86.5, 7239.0], [86.6, 7239.0], [86.7, 7239.0], [86.8, 7239.0], [86.9, 7449.0], [87.0, 7449.0], [87.1, 7449.0], [87.2, 7449.0], [87.3, 7449.0], [87.4, 7449.0], [87.5, 7449.0], [87.6, 7449.0], [87.7, 7449.0], [87.8, 7449.0], [87.9, 7449.0], [88.0, 7449.0], [88.1, 7449.0], [88.2, 7972.0], [88.3, 7972.0], [88.4, 7972.0], [88.5, 7972.0], [88.6, 7972.0], [88.7, 7972.0], [88.8, 7972.0], [88.9, 7972.0], [89.0, 7972.0], [89.1, 7972.0], [89.2, 7972.0], [89.3, 7972.0], [89.4, 7972.0], [89.5, 8039.0], [89.6, 8039.0], [89.7, 8039.0], [89.8, 8039.0], [89.9, 8039.0], [90.0, 8039.0], [90.1, 8039.0], [90.2, 8039.0], [90.3, 8039.0], [90.4, 8039.0], [90.5, 8039.0], [90.6, 8039.0], [90.7, 8039.0], [90.8, 9744.0], [90.9, 9744.0], [91.0, 9744.0], [91.1, 9744.0], [91.2, 9744.0], [91.3, 9744.0], [91.4, 9744.0], [91.5, 9744.0], [91.6, 9744.0], [91.7, 9744.0], [91.8, 9744.0], [91.9, 9744.0], [92.0, 9744.0], [92.1, 9744.0], [92.2, 9831.0], [92.3, 9831.0], [92.4, 9831.0], [92.5, 9831.0], [92.6, 9831.0], [92.7, 9831.0], [92.8, 9831.0], [92.9, 9831.0], [93.0, 9831.0], [93.1, 9831.0], [93.2, 9831.0], [93.3, 9831.0], [93.4, 9831.0], [93.5, 9844.0], [93.6, 9844.0], [93.7, 9844.0], [93.8, 9844.0], [93.9, 9844.0], [94.0, 9844.0], [94.1, 9844.0], [94.2, 9844.0], [94.3, 9844.0], [94.4, 9844.0], [94.5, 9844.0], [94.6, 9844.0], [94.7, 9844.0], [94.8, 11529.0], [94.9, 11529.0], [95.0, 11529.0], [95.1, 11529.0], [95.2, 11529.0], [95.3, 11529.0], [95.4, 11529.0], [95.5, 11529.0], [95.6, 11529.0], [95.7, 11529.0], [95.8, 11529.0], [95.9, 11529.0], [96.0, 11529.0], [96.1, 12259.0], [96.2, 12259.0], [96.3, 12259.0], [96.4, 12259.0], [96.5, 12259.0], [96.6, 12259.0], [96.7, 12259.0], [96.8, 12259.0], [96.9, 12259.0], [97.0, 12259.0], [97.1, 12259.0], [97.2, 12259.0], [97.3, 12259.0], [97.4, 16530.0], [97.5, 16530.0], [97.6, 16530.0], [97.7, 16530.0], [97.8, 16530.0], [97.9, 16530.0], [98.0, 16530.0], [98.1, 16530.0], [98.2, 16530.0], [98.3, 16530.0], [98.4, 16530.0], [98.5, 16530.0], [98.6, 16530.0], [98.7, 20569.0], [98.8, 20569.0], [98.9, 20569.0], [99.0, 20569.0], [99.1, 20569.0], [99.2, 20569.0], [99.3, 20569.0], [99.4, 20569.0], [99.5, 20569.0], [99.6, 20569.0], [99.7, 20569.0], [99.8, 20569.0], [99.9, 20569.0]], "isOverall": false, "label": "-19", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 48.0, "series": [{"data": [[200.0, 8.0], [300.0, 48.0], [400.0, 26.0], [500.0, 15.0], [600.0, 12.0], [700.0, 5.0], [800.0, 4.0], [900.0, 6.0], [1000.0, 7.0], [1100.0, 5.0], [1200.0, 7.0], [1300.0, 4.0], [1400.0, 5.0], [1500.0, 3.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 4.0], [2000.0, 1.0], [2200.0, 4.0], [2300.0, 1.0], [2400.0, 2.0], [2500.0, 2.0], [2800.0, 1.0], [2900.0, 2.0], [3000.0, 1.0], [3300.0, 2.0], [3400.0, 1.0], [3500.0, 2.0], [3600.0, 3.0], [3700.0, 1.0], [3800.0, 2.0], [3900.0, 2.0], [4300.0, 1.0], [4500.0, 2.0], [4400.0, 2.0], [4700.0, 1.0], [4900.0, 2.0], [5100.0, 1.0], [5300.0, 1.0], [5200.0, 2.0], [5600.0, 2.0], [5400.0, 2.0], [5800.0, 2.0], [5900.0, 1.0], [6100.0, 1.0], [6200.0, 1.0], [6300.0, 2.0], [6400.0, 2.0], [6500.0, 1.0], [6600.0, 1.0], [6900.0, 1.0], [7100.0, 1.0], [7300.0, 1.0], [7400.0, 2.0], [7200.0, 1.0], [7500.0, 3.0], [7600.0, 1.0], [7800.0, 1.0], [8000.0, 1.0], [8400.0, 1.0], [8600.0, 1.0], [8700.0, 1.0], [9000.0, 2.0], [8800.0, 2.0], [9100.0, 2.0], [8900.0, 1.0], [9200.0, 1.0], [9400.0, 3.0], [9300.0, 2.0], [9700.0, 2.0], [9500.0, 1.0], [9900.0, 2.0], [9800.0, 1.0], [10100.0, 3.0], [10700.0, 3.0], [11000.0, 3.0], [10900.0, 1.0], [10800.0, 2.0], [11100.0, 1.0], [11200.0, 1.0], [11400.0, 1.0], [11300.0, 1.0], [12000.0, 1.0], [12300.0, 1.0], [12700.0, 1.0], [14100.0, 1.0], [14700.0, 1.0], [14900.0, 1.0], [15000.0, 1.0], [15400.0, 1.0], [16200.0, 1.0], [16300.0, 1.0], [17800.0, 1.0], [18500.0, 1.0], [18600.0, 1.0], [19800.0, 1.0], [20000.0, 1.0], [20300.0, 1.0], [20500.0, 2.0], [20700.0, 1.0], [21600.0, 1.0], [25000.0, 1.0]], "isOverall": false, "label": "-16", "isController": false}, {"data": [[600.0, 8.0], [700.0, 4.0], [800.0, 3.0], [900.0, 2.0], [1000.0, 2.0], [1200.0, 2.0], [1300.0, 1.0], [1400.0, 4.0], [1500.0, 2.0], [1600.0, 2.0], [1700.0, 3.0], [1800.0, 4.0], [1900.0, 1.0], [2000.0, 1.0], [2200.0, 3.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 3.0], [2600.0, 1.0], [2800.0, 1.0], [2700.0, 2.0], [2900.0, 2.0], [3100.0, 1.0], [3300.0, 1.0], [3700.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 2.0], [4300.0, 1.0], [4100.0, 1.0], [4600.0, 1.0], [4800.0, 3.0], [4900.0, 1.0], [5100.0, 2.0], [5300.0, 1.0], [5400.0, 1.0], [5800.0, 1.0], [5900.0, 1.0], [6300.0, 1.0], [6200.0, 2.0], [6400.0, 1.0], [6800.0, 1.0], [6700.0, 1.0], [7200.0, 1.0], [7400.0, 1.0], [7300.0, 1.0], [7500.0, 1.0], [7800.0, 2.0], [7700.0, 1.0], [7900.0, 1.0], [8200.0, 1.0], [8400.0, 1.0], [8800.0, 1.0], [8900.0, 1.0], [9200.0, 1.0], [10100.0, 1.0], [10000.0, 2.0], [9800.0, 1.0], [10300.0, 1.0], [11300.0, 1.0], [13600.0, 1.0], [17000.0, 1.0], [18600.0, 1.0], [20100.0, 1.0], [19900.0, 1.0], [21400.0, 1.0], [20800.0, 1.0], [200.0, 20.0], [300.0, 24.0], [400.0, 14.0], [500.0, 11.0]], "isOverall": false, "label": "-17", "isController": false}, {"data": [[8700.0, 1.0], [8500.0, 1.0], [600.0, 2.0], [9700.0, 1.0], [9300.0, 1.0], [10500.0, 1.0], [700.0, 2.0], [11400.0, 1.0], [800.0, 2.0], [1000.0, 3.0], [1100.0, 1.0], [1200.0, 1.0], [20000.0, 1.0], [1300.0, 1.0], [20800.0, 1.0], [21200.0, 1.0], [23000.0, 1.0], [1600.0, 1.0], [1800.0, 1.0], [1900.0, 3.0], [2000.0, 1.0], [2500.0, 1.0], [2800.0, 3.0], [2900.0, 1.0], [200.0, 18.0], [3500.0, 1.0], [4300.0, 1.0], [300.0, 20.0], [4800.0, 1.0], [5000.0, 1.0], [5100.0, 1.0], [4900.0, 1.0], [5300.0, 1.0], [5200.0, 1.0], [5400.0, 1.0], [5800.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [400.0, 11.0], [6700.0, 1.0], [7100.0, 1.0], [7000.0, 1.0], [7500.0, 1.0], [500.0, 5.0]], "isOverall": false, "label": "-18", "isController": false}, {"data": [[1200.0, 1.0], [1300.0, 5.0], [1400.0, 1.0], [1500.0, 3.0], [1600.0, 4.0], [1700.0, 1.0], [1800.0, 3.0], [1900.0, 4.0], [2000.0, 2.0], [2100.0, 3.0], [2300.0, 2.0], [2400.0, 2.0], [2600.0, 1.0], [2800.0, 4.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 1.0], [3900.0, 1.0], [4300.0, 1.0], [4500.0, 1.0], [4700.0, 1.0], [4900.0, 1.0], [5500.0, 1.0], [5800.0, 1.0], [6000.0, 2.0], [6200.0, 1.0], [6800.0, 1.0], [7500.0, 1.0], [7900.0, 1.0], [8200.0, 2.0], [8700.0, 1.0], [9100.0, 1.0], [8900.0, 1.0], [9700.0, 1.0], [11100.0, 1.0], [11000.0, 1.0], [11500.0, 1.0], [11800.0, 1.0], [12500.0, 1.0], [13200.0, 1.0], [12800.0, 1.0], [13400.0, 1.0], [14600.0, 1.0], [15200.0, 1.0], [15400.0, 1.0], [17100.0, 1.0], [17900.0, 1.0], [20000.0, 1.0], [21700.0, 1.0], [22200.0, 1.0], [23800.0, 1.0]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": true}, {"data": [[600.0, 1.0], [9700.0, 1.0], [9800.0, 2.0], [700.0, 2.0], [11500.0, 1.0], [12200.0, 1.0], [800.0, 3.0], [900.0, 1.0], [1000.0, 2.0], [16500.0, 1.0], [1100.0, 1.0], [20500.0, 1.0], [1600.0, 2.0], [1800.0, 1.0], [2100.0, 2.0], [2900.0, 1.0], [3000.0, 1.0], [200.0, 12.0], [3500.0, 1.0], [4400.0, 1.0], [300.0, 20.0], [400.0, 10.0], [7000.0, 1.0], [7400.0, 1.0], [7200.0, 1.0], [7900.0, 1.0], [500.0, 3.0], [8000.0, 1.0]], "isOverall": false, "label": "-19", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 25000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 137.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 274.0, "series": [{"data": [[0.0, 231.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 137.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 274.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.666666666666667, "minX": 1.61055336E12, "maxY": 96.90973201692533, "series": [{"data": [[1.61055336E12, 96.90973201692533], [1.61055342E12, 4.666666666666667]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61055342E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 221.0, "minX": 1.0, "maxY": 25053.0, "series": [{"data": [[4.0, 15003.0], [8.0, 25053.0], [12.0, 20777.0], [14.0, 20554.0], [15.0, 20552.0], [16.0, 21621.0], [17.0, 20338.0], [20.0, 1424.962962962963], [22.0, 19852.0], [26.0, 7402.0], [28.0, 18630.0], [31.0, 7543.0], [33.0, 17868.0], [32.0, 7544.0], [34.0, 18537.0], [39.0, 16246.0], [41.0, 11575.5], [43.0, 9084.5], [42.0, 4161.5], [44.0, 14156.0], [47.0, 12334.0], [46.0, 6558.5], [49.0, 5814.5], [51.0, 694.5], [50.0, 11229.0], [53.0, 11100.5], [55.0, 12008.0], [54.0, 10780.0], [57.0, 10715.0], [56.0, 11003.0], [59.0, 10850.0], [58.0, 10850.0], [60.0, 7128.5], [62.0, 10149.0], [67.0, 11048.0], [66.0, 10926.0], [65.0, 10136.0], [70.0, 308.0], [71.0, 4912.0], [68.0, 9061.0], [75.0, 9722.0], [73.0, 10715.5], [79.0, 9372.0], [78.0, 9738.0], [77.0, 9879.0], [80.0, 4680.0], [81.0, 4818.5], [82.0, 9417.0], [87.0, 8897.0], [86.0, 8901.0], [85.0, 9200.0], [84.0, 9127.0], [90.0, 364.25], [89.0, 9435.0], [88.0, 9189.0], [94.0, 8777.0], [93.0, 9400.0], [92.0, 5332.5], [98.0, 8444.0], [97.0, 8609.0], [96.0, 9035.0], [100.0, 339.0], [103.0, 5122.0], [102.0, 7537.0], [101.0, 1792.0], [106.0, 3926.5], [105.0, 7427.0], [104.0, 7262.0], [108.0, 3774.0], [111.0, 500.3333333333333], [110.0, 1272.0], [115.0, 340.0], [117.0, 6341.0], [116.0, 6342.0], [123.0, 6632.0], [122.0, 6299.0], [126.0, 1507.8], [124.0, 3491.0], [130.0, 1712.4], [135.0, 5214.0], [134.0, 5641.0], [133.0, 6462.0], [132.0, 2855.0], [131.0, 2880.0], [129.0, 5921.0], [143.0, 4439.0], [142.0, 4534.0], [141.0, 4999.0], [140.0, 4404.0], [138.0, 5195.0], [137.0, 5659.0], [136.0, 4924.666666666667], [144.0, 375.4], [151.0, 3814.0], [150.0, 3566.0], [149.0, 4583.0], [147.0, 5275.0], [145.0, 4799.0], [153.0, 1522.6666666666667], [154.0, 544.5], [157.0, 447.3333333333333], [159.0, 3804.0], [156.0, 3939.0], [152.0, 4355.0], [166.0, 2367.0], [165.0, 3618.0], [164.0, 3580.0], [163.0, 3986.0], [169.0, 1349.0], [170.0, 708.0], [175.0, 1424.5], [173.0, 3363.0], [168.0, 3771.0], [180.0, 1263.25], [182.0, 2502.0], [176.0, 2294.0], [186.0, 1627.0], [191.0, 885.0], [190.0, 2260.0], [188.0, 462.0], [184.0, 2933.0], [194.0, 525.0], [195.0, 1057.6], [197.0, 641.0], [192.0, 2252.0], [202.0, 1187.0], [206.0, 448.5], [204.0, 511.0], [201.0, 2894.0], [215.0, 1245.0], [214.0, 1398.0], [208.0, 2064.0], [216.0, 1484.6], [220.0, 868.272727272727], [219.0, 1548.0], [1.0, 16379.0]], "isOverall": false, "label": "-16", "isController": false}, {"data": [[110.46875, 4092.6631944444453]], "isOverall": false, "label": "-16-Aggregated", "isController": false}, {"data": [[3.0, 20822.0], [5.0, 19932.0], [7.0, 13658.0], [10.0, 21448.0], [18.0, 20188.0], [20.0, 828.1458333333335], [24.0, 4808.0], [25.0, 3906.0], [27.0, 18630.0], [29.0, 7581.0], [37.0, 7359.0], [36.0, 3123.0], [38.0, 17082.0], [41.0, 7855.0], [40.0, 7461.0], [43.0, 221.0], [42.0, 3811.0], [45.0, 463.0], [48.0, 370.0], [51.0, 11314.0], [61.0, 10371.0], [63.0, 9843.0], [62.0, 3762.0], [64.0, 10069.0], [70.0, 10084.0], [69.0, 9263.0], [74.0, 8498.0], [78.0, 10106.0], [83.0, 8947.0], [90.0, 588.0], [91.0, 5929.0], [95.0, 8273.0], [99.0, 7902.0], [97.0, 2244.0], [101.0, 7896.0], [100.0, 7770.0], [111.0, 6014.0], [109.0, 6768.0], [114.0, 6499.0], [113.0, 5434.0], [119.0, 567.0], [118.0, 6273.0], [121.0, 5167.0], [120.0, 6234.0], [126.0, 295.0], [127.0, 5881.0], [125.0, 5999.0], [124.0, 597.0], [128.0, 4801.0], [138.0, 6345.0], [139.0, 4065.0], [136.0, 232.0], [148.0, 3259.6666666666665], [144.0, 4881.0], [153.0, 486.0], [154.0, 2138.0], [158.0, 2799.0], [157.0, 2624.0], [155.0, 2503.0], [166.0, 2542.0], [161.0, 2579.0], [160.0, 2493.0], [169.0, 460.2], [170.0, 1628.5], [174.0, 515.0], [172.0, 1741.0], [171.0, 1764.0], [180.0, 346.0], [183.0, 2023.0], [181.0, 2258.0], [179.0, 2258.0], [178.0, 2328.0], [177.0, 1995.0], [176.0, 1590.0], [186.0, 677.0], [189.0, 1875.0], [187.0, 1316.0], [185.0, 2950.0], [195.0, 374.0], [197.0, 1172.5], [198.0, 3578.0], [193.0, 1446.0], [192.0, 409.0], [207.0, 390.0], [206.0, 764.0], [205.0, 411.0], [204.0, 1267.0], [212.0, 380.0], [215.0, 1016.5], [214.0, 561.3333333333334], [213.0, 834.0], [211.0, 508.0], [210.0, 1477.0], [209.0, 482.0], [220.0, 1147.1000000000001], [219.0, 595.0], [218.0, 1498.0], [216.0, 775.6]], "isOverall": false, "label": "-17", "isController": false}, {"data": [[108.49714285714283, 3103.3028571428576]], "isOverall": false, "label": "-17-Aggregated", "isController": false}, {"data": [[2.0, 23033.0], [9.0, 21243.0], [11.0, 20827.0], [19.0, 20086.0], [20.0, 667.8809523809523], [21.0, 4884.0], [41.0, 4979.0], [43.0, 5145.0], [42.0, 421.0], [45.0, 330.0], [44.0, 245.0], [48.0, 10522.0], [51.0, 5221.0], [53.0, 7052.0], [73.0, 410.0], [72.0, 8593.0], [76.0, 9328.0], [80.0, 9795.0], [90.0, 4601.0], [103.0, 9299.0], [107.0, 5851.0], [110.0, 3951.5], [115.0, 6338.0], [112.0, 5494.0], [119.0, 6255.0], [121.0, 297.0], [126.0, 785.0], [139.0, 5081.0], [148.0, 1510.0], [147.0, 1294.0], [146.0, 4361.0], [145.0, 445.0], [156.0, 1820.0], [167.0, 1373.0], [162.0, 1961.0], [174.0, 2001.0], [186.0, 319.0], [199.0, 1610.0], [196.0, 792.0], [194.0, 1001.0], [206.0, 599.0], [207.0, 388.0], [205.0, 806.0], [203.0, 543.0], [200.0, 1970.0], [212.0, 363.6666666666667], [214.0, 2849.0], [210.0, 5389.0], [220.0, 1918.2], [219.0, 651.0]], "isOverall": false, "label": "-18", "isController": false}, {"data": [[84.1456310679612, 2822.184466019418]], "isOverall": false, "label": "-18-Aggregated", "isController": false}, {"data": [[35.0, 7507.0], [36.0, 7906.0], [41.0, 1628.0], [43.0, 6608.333333333333], [42.0, 17965.0], [45.0, 12872.0], [51.0, 20085.0], [50.0, 11304.0], [57.0, 14650.0], [60.0, 9193.0], [62.0, 17165.0], [67.0, 15208.0], [65.0, 11851.0], [76.0, 11142.0], [6.0, 22272.0], [103.0, 9781.0], [101.0, 13450.0], [109.0, 2495.0], [126.0, 13256.0], [136.0, 7710.25], [148.0, 2867.0], [157.0, 1837.0], [188.0, 2341.0], [199.0, 9033.5], [214.0, 8941.0], [13.0, 21749.0], [220.0, 2087.0], [218.0, 1764.0], [217.0, 2168.0], [20.0, 2669.864864864864], [23.0, 8208.0], [30.0, 23824.0]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": true}, {"data": [[61.06578947368418, 6268.750000000001]], "isOverall": false, "label": "EMPTY_SERIE_NAME-Aggregated", "isController": true}, {"data": [[35.0, 3539.0], [36.0, 310.0], [41.0, 328.0], [43.0, 1454.3333333333333], [42.0, 350.0], [45.0, 11529.0], [51.0, 7449.0], [50.0, 4229.5], [57.0, 9831.0], [60.0, 7972.0], [62.0, 9844.0], [67.0, 3005.0], [65.0, 440.0], [76.0, 347.0], [6.0, 12259.0], [103.0, 502.0], [101.0, 2928.0], [109.0, 545.0], [126.0, 7070.0], [136.0, 3153.25], [148.0, 1628.0], [157.0, 276.0], [188.0, 881.0], [199.0, 2450.5], [214.0, 744.0], [13.0, 20569.0], [220.0, 845.0], [218.0, 815.0], [217.0, 622.0], [20.0, 451.7027027027027], [23.0, 7239.0], [30.0, 16530.0]], "isOverall": false, "label": "-19", "isController": false}, {"data": [[61.06578947368418, 2319.618421052632]], "isOverall": false, "label": "-19-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 220.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 62.88333333333333, "minX": 1.61055336E12, "maxY": 15950.2, "series": [{"data": [[1.61055336E12, 15950.2], [1.61055342E12, 195.58333333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61055336E12, 4856.316666666667], [1.61055342E12, 62.88333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61055342E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2187.0933333333337, "minX": 1.61055336E12, "maxY": 23033.0, "series": [{"data": [[1.61055336E12, 3937.7263157894745], [1.61055342E12, 18811.666666666668]], "isOverall": false, "label": "-16", "isController": false}, {"data": [[1.61055336E12, 2841.081395348838], [1.61055342E12, 18137.333333333332]], "isOverall": false, "label": "-17", "isController": false}, {"data": [[1.61055336E12, 2624.039215686275], [1.61055342E12, 23033.0]], "isOverall": false, "label": "-18", "isController": false}, {"data": [[1.61055336E12, 6055.373333333334], [1.61055342E12, 22272.0]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": true}, {"data": [[1.61055336E12, 2187.0933333333337], [1.61055342E12, 12259.0]], "isOverall": false, "label": "-19", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61055342E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2181.9600000000005, "minX": 1.61055336E12, "maxY": 23032.0, "series": [{"data": [[1.61055336E12, 3936.0736842105257], [1.61055342E12, 18809.0]], "isOverall": false, "label": "-16", "isController": false}, {"data": [[1.61055336E12, 2839.5581395348836], [1.61055342E12, 18134.666666666668]], "isOverall": false, "label": "-17", "isController": false}, {"data": [[1.61055336E12, 2622.5980392156857], [1.61055342E12, 23032.0]], "isOverall": false, "label": "-18", "isController": false}, {"data": [[1.61055336E12, 6045.866666666668], [1.61055342E12, 22272.0]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": true}, {"data": [[1.61055336E12, 2181.9600000000005], [1.61055342E12, 12259.0]], "isOverall": false, "label": "-19", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61055342E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61055336E12, "maxY": 120.94666666666667, "series": [{"data": [[1.61055336E12, 71.15438596491225], [1.61055342E12, 43.333333333333336]], "isOverall": false, "label": "-16", "isController": false}, {"data": [[1.61055336E12, 0.0], [1.61055342E12, 0.0]], "isOverall": false, "label": "-17", "isController": false}, {"data": [[1.61055336E12, 0.0], [1.61055342E12, 0.0]], "isOverall": false, "label": "-18", "isController": false}, {"data": [[1.61055336E12, 120.94666666666667], [1.61055342E12, 39.0]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": true}, {"data": [[1.61055336E12, 0.0], [1.61055342E12, 0.0]], "isOverall": false, "label": "-19", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61055342E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 221.0, "minX": 1.61055336E12, "maxY": 25053.0, "series": [{"data": [[1.61055336E12, 21621.0], [1.61055342E12, 25053.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61055336E12, 9426.0], [1.61055342E12, 25053.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61055336E12, 20563.75], [1.61055342E12, 25053.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61055336E12, 11327.5], [1.61055342E12, 25053.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61055336E12, 221.0], [1.61055342E12, 12259.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61055336E12, 923.5], [1.61055342E12, 18155.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61055342E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 319.0, "minX": 1.0, "maxY": 19591.0, "series": [{"data": [[33.0, 2277.0], [2.0, 18600.5], [35.0, 319.0], [38.0, 405.0], [59.0, 806.0], [4.0, 6023.5], [76.0, 507.0], [5.0, 19591.0], [6.0, 1934.0], [7.0, 18202.5], [8.0, 6323.0], [9.0, 495.0], [11.0, 447.0], [12.0, 2349.0], [15.0, 341.0], [16.0, 388.0], [1.0, 16795.0], [17.0, 8777.0], [18.0, 9350.0], [19.0, 4375.0], [20.0, 10618.5], [21.0, 358.0], [22.0, 449.0], [23.0, 645.0], [24.0, 5565.5], [25.0, 6234.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 76.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 316.0, "minX": 1.0, "maxY": 19588.5, "series": [{"data": [[33.0, 2276.5], [2.0, 18599.5], [35.0, 316.0], [38.0, 405.0], [59.0, 803.0], [4.0, 6023.0], [76.0, 506.5], [5.0, 19588.5], [6.0, 1930.5], [7.0, 18200.5], [8.0, 6321.5], [9.0, 494.0], [11.0, 446.0], [12.0, 2347.5], [15.0, 336.0], [16.0, 387.0], [1.0, 16791.0], [17.0, 8776.0], [18.0, 9349.0], [19.0, 4375.0], [20.0, 10616.0], [21.0, 357.0], [22.0, 447.5], [23.0, 645.0], [24.0, 5563.0], [25.0, 6233.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 76.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.7, "minX": 1.61055336E12, "maxY": 10.7, "series": [{"data": [[1.61055336E12, 10.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61055336E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.61055336E12, "maxY": 10.566666666666666, "series": [{"data": [[1.61055336E12, 10.566666666666666], [1.61055342E12, 0.13333333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61055342E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61055336E12, "maxY": 4.75, "series": [{"data": [[1.61055336E12, 4.75], [1.61055342E12, 0.05]], "isOverall": false, "label": "-16-success", "isController": false}, {"data": [[1.61055336E12, 1.25], [1.61055342E12, 0.016666666666666666]], "isOverall": false, "label": "-19-success", "isController": false}, {"data": [[1.61055336E12, 2.8666666666666667], [1.61055342E12, 0.05]], "isOverall": false, "label": "-17-success", "isController": false}, {"data": [[1.61055336E12, 1.25], [1.61055342E12, 0.016666666666666666]], "isOverall": false, "label": "-success", "isController": true}, {"data": [[1.61055336E12, 1.7], [1.61055342E12, 0.016666666666666666]], "isOverall": false, "label": "-18-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61055342E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.61055336E12, "maxY": 11.816666666666666, "series": [{"data": [[1.61055336E12, 11.816666666666666], [1.61055342E12, 0.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61055342E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

